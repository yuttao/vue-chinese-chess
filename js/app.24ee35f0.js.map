{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/components/ChessBoard.vue?4f12","webpack:///./src/App.vue?fdb0","webpack:///./src/App.vue","webpack:///./src/components/ChessBoard.vue","webpack:///./src/components/ChessGrid.vue","webpack:///./src/components/ChessGrid.vue?33a2","webpack:///./src/components/ChessGrid.vue?d055","webpack:///./src/components/ChessPiece.vue","webpack:///./src/components/CharAdvisor.vue","webpack:///./src/components/CharAdvisor.vue?797e","webpack:///./src/components/CharAdvisor.vue?b672","webpack:///./src/components/CharBishop.vue","webpack:///./src/components/CharBishop.vue?fdb0","webpack:///./src/components/CharBishop.vue?b280","webpack:///./src/components/CharCannon.vue","webpack:///./src/components/CharCannon.vue?b0f1","webpack:///./src/components/CharCannon.vue?0ed4","webpack:///./src/components/CharKing.vue","webpack:///./src/components/CharKing.vue?8ff1","webpack:///./src/components/CharKing.vue?c420","webpack:///./src/components/CharKnight.vue","webpack:///./src/components/CharKnight.vue?d07b","webpack:///./src/components/CharKnight.vue?5d4d","webpack:///./src/components/CharPawn.vue","webpack:///./src/components/CharPawn.vue?4af8","webpack:///./src/components/CharPawn.vue?4a88","webpack:///./src/components/CharRook.vue","webpack:///./src/components/CharRook.vue?4e02","webpack:///./src/components/CharRook.vue?df19","webpack:///./src/components/ChessPiece.vue?bfa4","webpack:///./src/components/ChessPiece.vue?8e48","webpack:///./src/components/Ucci.ts","webpack:///./src/components/ChessBoard.vue?083d","webpack:///./src/components/ChessBoard.vue?6fe8","webpack:///./src/App.vue?3acc","webpack:///./src/App.vue?dfb6","webpack:///./src/store/index.ts","webpack:///./src/main.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","xmlns","viewBox","class","id","height","in","stdDeviation","dx","dy","type","slope","transform","unmovable","position","piece","movable","onSelectPiece","moves","highlight","onMovePiece","stroke","fill","x","y","stroke-width","width","lines","line","path","dashes","dash","dashDist","dashLen","computed","ret","this","points","concat","render","style","cx","cy","filter","translate","pieceClicked","textColor","highlightPath","player","props","String","highDist","highLen","toLowerCase","undefined","charCodeAt","len","components","CharAdvisor","CharBishop","CharCannon","CharKing","CharKnight","CharPawn","CharRook","methods","$emit","North","South","West","East","NorthEast","NorthWest","SouthEast","SouthWest","isPositionValid","isInPalace","add","diff","a","b","abs","strToPos","posToStr","fromCharCode","copy","matrix","fen","split","mat","row","k","Number","count","join","getPlayer","v","getLabel","team","jumped","can","t1","t2","direct","pa","pb","set","getKingMoves","getAdvisorMoves","getBishopMoves","getCanonMoves","getKnightMoves","getRookMoves","getPawnMoves","move","Math","countObstacle","ax","bx","ay","by","ta","tb","isAdvisorMoveValid","isBishopMoveValid","isCannonMoveValid","isKingMoveValid","isKnightMoveValid","isPawnMoveValid","isRookMoveValid","start","end","eaten","history","chosen","possible","ChessGrid","ChessPiece","ucci","getTeam","getByStr","play","indexOf","getMoves","ChessBoard","state","mutations","actions","use","store","mount"],"mappings":"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","file":"js/app.24ee35f0.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/vue-chinese-chess/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ChessBoard.vue?vue&type=style&index=0&id=0ac4f90c&lang=css\"","export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader-v16/dist/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./App.vue?vue&type=style&index=0&id=1116e598&lang=css\"","<template>\n  <ChessBoard />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport ChessBoard from \"./components/ChessBoard.vue\";\n\n@Options({\n  name: \"App\",\n  components: {\n    ChessBoard,\n  },\n})\nexport default class App extends Vue {}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n","<template>\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 460 510\"\n    class=\"chess-board\"\n  >\n    <defs>\n      <filter id=\"dropshadow\" height=\"150%\">\n        <feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"3\" />\n        <!-- stdDeviation is how much to blur -->\n        <feOffset dx=\"2\" dy=\"2\" result=\"offsetblur\" />\n        <!-- how much to offset -->\n        <feComponentTransfer>\n          <feFuncA type=\"linear\" slope=\"0.5\" />\n          <!-- slope is the opacity of the shadow -->\n        </feComponentTransfer>\n        <feMerge>\n          <feMergeNode />\n          <!-- this contains the offset blurred image -->\n          <feMergeNode in=\"SourceGraphic\" />\n          <!-- this contains the element that the filter is applied to -->\n        </feMerge>\n      </filter>\n    </defs>\n    <g transform=\"translate(5,5)\">\n      <ChessGrid />\n      <ChessPiece\n        v-for=\"p of unmovable\"\n        :key=\"p.position\"\n        :piece=\"p.piece\"\n        :position=\"p.position\"\n      />\n      <ChessPiece\n        v-for=\"p of movable\"\n        :key=\"p.position\"\n        :piece=\"p.piece\"\n        :position=\"p.position\"\n        @pieceClicked=\"onSelectPiece\"\n      />\n      <ChessPiece\n        v-for=\"p of moves\"\n        :key=\"p.position\"\n        :piece=\"p.piece\"\n        :position=\"p.position\"\n        :highlight=\"true\"\n        @pieceClicked=\"onMovePiece\"\n      />\n    </g>\n  </svg>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport ChessGrid from \"./ChessGrid.vue\";\nimport ChessPiece from \"./ChessPiece.vue\";\nimport { Ucci } from \"./Ucci\";\n\nclass PieceInfo {\n  position = \"\";\n  piece = \"\";\n\n  constructor(position: string, piece: string) {\n    this.position = position;\n    this.piece = piece;\n  }\n}\n\nclass Move {\n  start = \"a0\";\n  end = \"a1\";\n  eaten = \" \";\n  constructor(start: string, end: string, eaten: string) {\n    this.start = start;\n    this.end = end;\n    this.eaten = eaten;\n  }\n}\n\n@Options({\n  name: \"ChessBoard\",\n  data() {\n    return {\n      matrix: [\n        [\"r\", \"n\", \"b\", \"a\", \"k\", \"a\", \"b\", \"n\", \"r\"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \"c\", \" \", \" \", \" \", \" \", \" \", \"c\", \" \"],\n        [\"p\", \" \", \"p\", \" \", \"p\", \" \", \"p\", \" \", \"p\"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\"P\", \" \", \"P\", \" \", \"P\", \" \", \"P\", \" \", \"P\"],\n        [\" \", \"C\", \" \", \" \", \" \", \" \", \" \", \"C\", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\"R\", \"N\", \"B\", \"A\", \"K\", \"A\", \"B\", \"N\", \"R\"],\n      ],\n      history: [],\n      player: \"w\",\n      chosen: undefined,\n      possible: [],\n    };\n  },\n  components: {\n    ChessGrid,\n    ChessPiece,\n  },\n  computed: {\n    movable() {\n      let ret = [];\n      let ucci = new Ucci(this.matrix);\n      for (const p of ucci.getTeam(this.player)) {\n        if (p == this.chosen) {\n          continue;\n        }\n        ret.push(new PieceInfo(p, ucci.getByStr(p)));\n      }\n      return ret;\n    },\n    unmovable() {\n      let ret = [];\n      let ucci = new Ucci(this.matrix);\n      const play = this.player == \"w\" ? \"b\" : \"w\";\n      for (const p of ucci.getTeam(play)) {\n        if (this.possible.indexOf(p) >= 0) {\n          continue;\n        }\n        ret.push(new PieceInfo(p, ucci.getByStr(p)));\n      }\n      return ret;\n    },\n    moves() {\n      let ret = [];\n      const ucci = new Ucci(this.matrix);\n      for (const p of this.possible) {\n        ret.push(new PieceInfo(p, ucci.getByStr(p)));\n      }\n      if (this.chosen) {\n        ret.push(new PieceInfo(this.chosen, ucci.getByStr(this.chosen)));\n      }\n      return ret;\n    },\n  },\n  methods: {\n    onSelectPiece(piece: string) {\n      this.chosen = piece;\n      const ucci = new Ucci(this.matrix);\n      this.possible = ucci.getMoves(piece);\n    },\n    onMovePiece(piece: string) {\n      if (\n        this.chosen != piece &&\n        piece != undefined &&\n        this.chosen != undefined\n      ) {\n        const ucci = new Ucci(this.matrix);\n        this.history.push(\n          new Move(this.chosen, piece, ucci.move(this.chosen, piece))\n        );\n        this.player = this.player == \"w\" ? \"b\" : \"w\";\n      }\n      this.chosen = undefined;\n      this.possible = [];\n    },\n  },\n})\nexport default class ChessBoard extends Vue {}\n</script>\n\n<style>\nsvg.chess-board {\n  width: 100vw;\n  height: 110vw;\n  background: burlywood;\n  /* background: url(\"/assets/chessboard.svg\");\n  background-repeat: no-repeat;\n  background-size: cover; */\n  max-height: 100vh;\n  max-width: 90.909vh;\n  margin: auto;\n  position: absolute;\n  top: 0;\n  bottom: auto;\n  /* vertical center */\n  left: 0;\n  right: 0;\n  /* horizontal center */\n}\n</style>\n","<template>\n  <g stroke=\"black\" fill=\"transparent\">\n    <rect x=\"22\" y=\"22\" stroke-width=\"2px\" width=\"406\" height=\"456\" />\n    <rect x=\"25\" y=\"25\" stroke-width=\"1.5px\" width=\"400\" height=\"450\" />\n    <path\n      v-for=\"line of lines\"\n      :key=\"line.id\"\n      :d=\"line.path\"\n      stroke-width=\"1.2px\"\n    />\n    <path\n      v-for=\"dash of dashes\"\n      :key=\"dash.id\"\n      :d=\"dash.path\"\n      stroke-width=\"1.4px\"\n    />\n  </g>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"ChessGrid\",\n  data() {\n    return {\n      dashDist: 3.5,\n      dashLen: 11.5,\n    };\n  },\n  computed: {\n    lines() {\n      let ret = [\n        { id: \"line0\", path: `M 175,25 275,125` },\n        { id: \"line1\", path: `M 275,25 175,125` },\n        { id: \"line2\", path: `M 175,375 275,475` },\n        { id: \"line3\", path: `M 275,375 175,475` },\n      ];\n      let id = 4;\n      for (let i = 1; i < 9; i++) {\n        let y = i * 50 + 25;\n        ret.push({ id: `line${id++}`, path: `M 25,${y} 425,${y}` });\n      }\n      for (let i = 1; i < 8; i++) {\n        let x = i * 50 + 25;\n        ret.push({ id: `line${id++}`, path: `M ${x},25  ${x},225` });\n        ret.push({ id: `line${id++}`, path: `M ${x},275  ${x},475` });\n      }\n      return ret;\n    },\n    dashes() {\n      let ret = [];\n      let l = this.dashLen,\n        d = this.dashDist;\n      let points = [\n        [125, 175],\n        [225, 175],\n        [325, 175],\n        [125, 325],\n        [225, 325],\n        [325, 325],\n        [75, 125],\n        [375, 125],\n        [75, 375],\n        [375, 375],\n      ];\n\n      let id = 0;\n      for (let p of points.concat([\n        [25, 175],\n        [25, 325],\n      ])) {\n        let x = p[0] + d;\n        let y = p[1];\n        ret.push({\n          id: `dash${id++}`,\n          path: `M ${x},${y + d + l} l 0,${-l} l ${l},0`,\n        });\n        ret.push({\n          id: `dash${id++}`,\n          path: `M ${x},${y - d - l} l 0,${l} l ${l},0`,\n        });\n      }\n      for (let p of points.concat([\n        [425, 175],\n        [425, 325],\n      ])) {\n        let x = p[0] - d;\n        let y = p[1];\n        ret.push({\n          id: `dash${id++}`,\n          path: `M ${x},${y + d + l} l 0,${-l} l ${-l},0`,\n        });\n        ret.push({\n          id: `dash${id++}`,\n          path: `M ${x},${y - d - l} l 0,${l} l ${-l},0`,\n        });\n      }\n      return ret;\n    },\n  },\n})\nexport default class ChessGrid extends Vue {}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"ChessGrid\",\n  data() {\n    return {\n      dashDist: 3.5,\n      dashLen: 11.5,\n    };\n  },\n  computed: {\n    lines() {\n      let ret = [\n        { id: \"line0\", path: `M 175,25 275,125` },\n        { id: \"line1\", path: `M 275,25 175,125` },\n        { id: \"line2\", path: `M 175,375 275,475` },\n        { id: \"line3\", path: `M 275,375 175,475` },\n      ];\n      let id = 4;\n      for (let i = 1; i < 9; i++) {\n        let y = i * 50 + 25;\n        ret.push({ id: `line${id++}`, path: `M 25,${y} 425,${y}` });\n      }\n      for (let i = 1; i < 8; i++) {\n        let x = i * 50 + 25;\n        ret.push({ id: `line${id++}`, path: `M ${x},25  ${x},225` });\n        ret.push({ id: `line${id++}`, path: `M ${x},275  ${x},475` });\n      }\n      return ret;\n    },\n    dashes() {\n      let ret = [];\n      let l = this.dashLen,\n        d = this.dashDist;\n      let points = [\n        [125, 175],\n        [225, 175],\n        [325, 175],\n        [125, 325],\n        [225, 325],\n        [325, 325],\n        [75, 125],\n        [375, 125],\n        [75, 375],\n        [375, 375],\n      ];\n\n      let id = 0;\n      for (let p of points.concat([\n        [25, 175],\n        [25, 325],\n      ])) {\n        let x = p[0] + d;\n        let y = p[1];\n        ret.push({\n          id: `dash${id++}`,\n          path: `M ${x},${y + d + l} l 0,${-l} l ${l},0`,\n        });\n        ret.push({\n          id: `dash${id++}`,\n          path: `M ${x},${y - d - l} l 0,${l} l ${l},0`,\n        });\n      }\n      for (let p of points.concat([\n        [425, 175],\n        [425, 325],\n      ])) {\n        let x = p[0] - d;\n        let y = p[1];\n        ret.push({\n          id: `dash${id++}`,\n          path: `M ${x},${y + d + l} l 0,${-l} l ${-l},0`,\n        });\n        ret.push({\n          id: `dash${id++}`,\n          path: `M ${x},${y - d - l} l 0,${l} l ${-l},0`,\n        });\n      }\n      return ret;\n    },\n  },\n})\nexport default class ChessGrid extends Vue {}\n","import { render } from \"./ChessGrid.vue?vue&type=template&id=54dfc25a\"\nimport script from \"./ChessGrid.vue?vue&type=script&lang=ts\"\nexport * from \"./ChessGrid.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <g filter=\"url(#dropshadow)\" :transform=\"translate\" @click=\"pieceClicked\">\n    <g\n      v-if=\"highlight\"\n      fill=\"none\"\n      :style=\"{ stroke: textColor, strokeWidth: 4 }\"\n    >\n      <path v-for=\"p of highlightPath\" :key=\"p.id\" :d=\"p.path\" />\n      <rect\n        x=\"0\"\n        y=\"0\"\n        width=\"50\"\n        height=\"50\"\n        fill=\"transparent\"\n        stroke=\"none\"\n      />\n    </g>\n    <circle\n      v-if=\"piece != ' '\"\n      style=\"fill: #d69704; fill-opacity: 1\"\n      cx=\"25\"\n      cy=\"25\"\n      r=\"23\"\n    />\n    <circle\n      v-if=\"piece != ' '\"\n      style=\"fill: none; stroke-width: 2.5; stroke-opacity: 1\"\n      :style=\"{ stroke: textColor }\"\n      cx=\"25\"\n      cy=\"25\"\n      r=\"20\"\n    />\n    <g :style=\"{ fill: textColor }\">\n      <CharAdvisor v-if=\"type == 'a'\" />\n      <CharBishop v-else-if=\"type == 'b'\" :player=\"player\" />\n      <CharCannon v-else-if=\"type == 'c'\" />\n      <CharKing v-else-if=\"type == 'k'\" :player=\"player\" />\n      <CharKnight v-else-if=\"type == 'n'\" />\n      <CharPawn v-else-if=\"type == 'p'\" :player=\"player\" />\n      <CharRook v-else-if=\"type == 'r'\" />\n    </g>\n  </g>\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\nimport CharAdvisor from \"./CharAdvisor.vue\";\nimport CharBishop from \"./CharBishop.vue\";\nimport CharCannon from \"./CharCannon.vue\";\nimport CharKing from \"./CharKing.vue\";\nimport CharKnight from \"./CharKnight.vue\";\nimport CharPawn from \"./CharPawn.vue\";\nimport CharRook from \"./CharRook.vue\";\n\n@Options({\n  name: \"ChessPiece\",\n  props: {\n    piece: String,\n    position: String,\n    highlight: false,\n  },\n  data() {\n    return {\n      highDist: 3.5,\n      highLen: 12,\n    };\n  },\n  computed: {\n    // get the piece type\n    type(): string {\n      return this.piece.toLowerCase();\n    },\n    // the the piece color\n    textColor(): string {\n      if (\"a\" <= this.piece && this.piece <= \"z\") {\n        return \"rgb(5, 8, 202)\";\n      } else if (\"A\" <= this.piece && this.piece <= \"Z\") {\n        return \"#9b0606\";\n      }\n      return \"#793131\";\n    },\n    // get the player symbol\n    player(): string {\n      if (\"a\" <= this.piece && this.piece <= \"z\") {\n        return \"b\";\n      } else if (\"A\" <= this.piece && this.piece <= \"Z\") {\n        return \"w\";\n      }\n      return \" \";\n    },\n    // caculate the traslation of the piece string format position\n    translate(): string {\n      if (this.position == undefined) {\n        return \"translate(0 0)\";\n      }\n      var dx = this.position.charCodeAt(0) - \"a\".charCodeAt(0);\n      var dy = this.position.charCodeAt(1) - \"0\".charCodeAt(0);\n      return `translate(${dx * 50} ${dy * 50})`;\n    },\n    highlightPath() {\n      var dx = this.highDist;\n      if (this.piece == \" \") {\n        dx += 4;\n      }\n      var len = this.highLen;\n      return [\n        {\n          id: this.position + \":h0\",\n          path: `M ${dx},${dx + len} l 0,${-len} l ${len},0`,\n        },\n        {\n          id: this.position + \":h1\",\n          path: `M ${50 - dx},${dx + len} l 0,${-len} l ${-len},0`,\n        },\n        {\n          id: this.position + \":h2\",\n          path: `M ${dx},${50 - dx - len} l 0,${len} l ${len},0`,\n        },\n        {\n          id: this.position + \":h3\",\n          path: `M ${50 - dx},${50 - dx - len} l 0,${len} l ${-len},0`,\n        },\n      ];\n    },\n  },\n  components: {\n    CharAdvisor,\n    CharBishop,\n    CharCannon,\n    CharKing,\n    CharKnight,\n    CharPawn,\n    CharRook,\n  },\n  methods: {\n    pieceClicked() {\n      this.$emit(\"pieceClicked\", this.position);\n    },\n  },\n})\nexport default class ChessPiece extends Vue {\n  piece!: string;\n  position!: string;\n}\n</script>\n","<template>\n  <path\n    d=\"M 22.397 12.7604 C 21.8941 11.8553 22.0953 11.252 23.0003 10.9503 C 24.6094 11.252 25.967 11.7548 27.0732 12.4588 C 28.0789 13.0622 28.3805 14.0678 27.9784 15.4758 C 27.8777 16.3809 27.8275 18.2916 27.8275 21.208 C 30.8444 20.9062 32.8558 20.6549 33.8614 20.4537 C 34.7665 20.152 35.6213 20.0514 36.4258 20.152 C 39.4428 20.4537 40.8004 21.7108 40.4988 23.9232 C 39.9959 24.9289 38.6885 25.1803 36.5766 24.6775 C 34.2637 23.9735 31.3472 23.9735 27.8275 24.6775 C 27.6264 27.9962 27.4252 30.4097 27.2241 31.9182 C 28.8331 32.0188 29.3863 31.8177 28.8835 31.3148 C 28.7828 31.1137 28.9337 31.0634 29.336 31.164 C 29.7383 31.2645 30.0902 31.3148 30.3919 31.3148 C 32.202 31.4154 33.4089 31.868 34.0123 32.6725 C 35.0179 33.3764 35.3197 34.3317 34.9174 35.5386 C 34.9174 36.4436 34.0123 36.6448 32.202 36.142 C 27.1738 35.0357 22.6483 35.6895 18.6257 38.103 C 18.0223 38.6058 17.5195 38.455 17.1172 37.6504 C 16.9161 37.3488 16.6144 37.0471 16.2121 36.7454 C 15.9104 36.4436 15.659 36.1923 15.4579 35.9911 C 15.1562 35.5888 15.0053 35.1363 15.0053 34.6335 C 15.1059 34.2312 15.5584 33.9799 16.3629 33.8792 C 16.2624 33.8792 16.3127 33.8792 16.5139 33.8792 C 16.8155 33.8792 17.268 33.8289 17.8715 33.7284 C 18.2737 33.6279 18.5755 33.5776 18.7766 33.5776 C 20.1844 33.1753 21.5421 32.8736 22.8495 32.6724 C 23.1511 30.5606 23.2517 28.1973 23.1511 25.5826 C 19.9331 26.2866 17.5195 27.0407 15.9104 27.8453 C 14.8042 28.3481 13.7985 28.6498 12.8934 28.7503 C 12.2901 28.9515 11.7873 28.7001 11.385 27.9962 C 11.2845 27.8955 11.1335 27.6945 10.9325 27.3927 C 10.1279 26.4876 9.67537 25.6328 9.57483 24.8283 C 9.37364 24.3255 9.37364 24.0238 9.57483 23.9232 C 9.67537 23.8227 10.0776 23.8227 10.7815 23.9232 C 11.9883 24.1244 13.4969 23.9735 15.307 23.4707 C 15.5081 23.4707 15.8601 23.4204 16.3629 23.3199 C 18.5755 22.7164 20.8884 22.2639 23.3021 21.9621 C 23.8049 16.0289 23.5031 12.9615 22.3969 12.7604 Z\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharAdvisor\",\n})\nexport default class CharAdvisor extends Vue {}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharAdvisor\",\n})\nexport default class CharAdvisor extends Vue {}\n","import { render } from \"./CharAdvisor.vue?vue&type=template&id=7618e756\"\nimport script from \"./CharAdvisor.vue?vue&type=script&lang=ts\"\nexport * from \"./CharAdvisor.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <path\n    v-if=\"player == 'w'\"\n    d=\"M 19.3833 8.68062 C 20.6054 8.78247 21.6748 9.24077 22.5914 10.0555 C 23.3043 10.5647 23.4061 11.4304 22.8968 12.6525 C 22.4895 13.5691 22.1841 14.3839 21.9803 15.0968 C 23.8135 15.5042 24.5264 16.0643 24.1191 16.7772 C 24.1191 17.4902 23.7117 17.9993 22.8968 18.3048 C 21.8784 18.7122 21.2165 19.6289 20.9109 21.0546 C 20.7073 21.7675 20.7582 22.4804 21.0638 23.1934 C 21.1656 23.4988 21.4202 23.4479 21.8276 23.0405 C 23.2534 21.8184 24.3736 20.3926 25.1885 18.7631 C 25.1885 18.6613 25.2394 18.5595 25.3412 18.4576 C 25.5448 18.1521 25.6977 17.9993 25.7995 17.9993 C 25.7995 17.6938 25.7485 17.4392 25.6467 17.2354 C 25.5448 16.8281 25.6466 16.6244 25.9523 16.6244 C 26.3596 16.6244 26.716 16.8281 27.0216 17.2354 C 27.4289 15.9115 28.7529 14.6894 30.9935 13.5691 C 32.5212 12.7544 34.2524 13.1617 36.1875 14.7912 C 37.7151 15.7078 38.2244 16.7772 37.7151 17.9993 C 37.6133 19.0178 37.6133 20.5964 37.7151 22.735 C 37.7151 23.5497 37.7151 24.7719 37.7151 26.4014 C 37.817 29.4568 37.817 31.5955 37.7151 32.8175 C 37.817 34.6508 37.2569 36.0764 36.0347 37.0949 C 35.5255 37.6041 35.1182 37.6551 34.8126 37.2478 C 33.896 35.2109 33.1322 34.0396 32.5212 33.7341 C 30.4842 33.836 28.9057 34.3962 27.7854 35.4145 C 27.3781 35.7202 26.9198 35.7202 26.4105 35.4145 C 25.4939 34.7017 24.8829 33.174 24.5773 30.8316 C 24.17 27.267 24.3227 24.2627 25.0356 21.8184 C 23.9154 23.3461 22.5914 24.9756 21.0638 26.7069 C 20.4527 27.4199 20.0963 28.2854 19.9944 29.3039 C 19.6889 30.9334 19.7398 33.785 20.1472 37.8588 C 20.1472 38.5716 20.0963 39.1827 19.9944 39.6919 C 19.8925 40.0994 19.587 40.0994 19.0778 39.6919 C 17.8556 38.368 17.2446 36.5348 17.2446 34.1924 C 17.2446 33.2759 17.2955 32.3084 17.3975 31.2899 C 16.1752 33.3268 14.9532 34.2943 13.7311 34.1924 C 13.2218 34.396 12.9163 34.1415 12.8144 33.4285 C 12.7126 32.9194 12.6617 32.4101 12.6617 31.9009 C 12.6617 31.1881 12.5089 30.6788 12.2034 30.3732 C 12.1015 29.9659 12.2034 29.6604 12.5089 29.4568 C 14.0365 28.7438 15.2587 27.8781 16.1752 26.8597 C 17.3975 25.4339 17.9066 23.7026 17.7029 21.6658 C 16.5826 22.4804 15.8188 23.1934 15.4114 23.8044 C 14.2912 25.2302 13.069 25.6375 11.7451 25.0265 C 10.5229 24.5173 9.35174 23.3461 8.23146 21.5129 C 7.72224 20.5964 7.6204 19.9852 7.92593 19.6797 C 8.3333 19.3741 8.68976 19.3741 8.99529 19.6797 C 9.40266 20.2908 10.1156 20.2399 11.134 19.527 C 14.5967 17.6938 17.041 16.3188 18.4667 15.4024 C 18.7723 13.2636 18.874 11.685 18.7723 10.6666 C 18.6704 10.2592 18.5686 10.0046 18.4667 9.90275 C 18.263 9.90275 18.1612 10.1064 18.1612 10.5138 C 17.9576 10.9212 17.8556 10.9212 17.8556 10.5138 C 17.652 8.8843 18.1612 8.27324 19.3833 8.68061 Z M 32.0629 15.8606 C 31.961 15.8606 31.8591 15.9115 31.7573 16.0134 C 31.3499 16.217 30.637 16.5226 29.6186 16.93 C 29.4149 17.0318 29.1093 17.1337 28.702 17.2354 C 28.3964 17.4392 28.1927 17.5411 28.0909 17.5411 C 27.6836 17.9484 27.6326 18.4066 27.9382 18.9159 C 28.04 19.1196 28.1418 19.3741 28.2437 19.6797 C 28.3456 19.7816 28.3964 19.8834 28.3964 19.9852 C 28.8038 19.7816 29.2112 19.578 29.6186 19.3741 C 30.026 18.9668 30.5861 18.865 31.299 19.0687 C 31.8081 19.0687 32.572 19.2724 33.5905 19.6797 C 34.2016 19.9852 34.2524 20.4435 33.7433 21.0546 C 33.3358 21.5638 32.3174 22.5313 30.688 23.9572 C 30.4842 24.1608 30.4334 24.3646 30.5352 24.5682 C 30.637 24.772 30.7898 24.8228 30.9935 24.721 C 31.299 24.5172 31.6555 24.5172 32.0629 24.721 C 33.0813 25.3321 33.6923 25.7394 33.8959 25.9431 C 34.4052 26.3505 34.4052 26.7069 33.8959 27.0125 C 31.0444 29.1512 28.8038 30.4242 27.1743 30.8316 C 27.0724 31.85 27.3271 32.2065 27.9382 31.9009 C 29.3641 31.4936 30.2805 31.239 30.688 31.1371 C 31.8081 30.8316 32.7758 30.9844 33.5905 31.5955 C 33.7942 31.7991 33.9978 31.85 34.2016 31.7482 C 34.3034 31.6464 34.3543 31.3917 34.3543 30.9844 C 34.6598 24.8737 34.6089 20.2399 34.2016 17.0827 C 33.7942 15.8606 33.0813 15.4533 32.0629 15.8606 Z M 28.0909 22.4294 C 27.6836 23.1424 27.378 24.1098 27.1743 25.3321 C 27.1743 25.4339 27.1743 25.4849 27.1743 25.4849 C 27.6836 25.383 27.9891 25.1284 28.0909 24.721 C 28.0909 24.6191 28.1927 24.4663 28.3964 24.2627 C 28.6002 23.9572 28.7528 23.7026 28.8548 23.4988 C 29.1602 23.1934 29.1093 22.9896 28.7019 22.8878 C 28.3964 22.6842 28.1927 22.5313 28.0909 22.4294 Z M 27.0215 27.929 C 27.0215 29.2529 27.0724 30.0678 27.1743 30.3732 C 27.3781 30.1696 27.5817 29.915 27.7854 29.6094 C 28.0909 29.3039 28.2947 29.1003 28.3965 28.9984 C 28.6002 28.7947 28.6511 28.6928 28.5492 28.6928 C 28.5492 28.591 28.4474 28.5401 28.2437 28.5401 C 27.9382 28.4383 27.5308 28.2345 27.0216 27.929 Z\"\n  />\n  <path\n    v-else-if=\"player == 'b'\"\n    d=\"M 26.8965 7.82843 C 27.973 9.00285 28.2666 9.88357 27.7773 10.4708 C 28.6582 10.8624 29.2454 11.4496 29.5389 12.2324 C 29.9305 13.0154 29.8326 13.7494 29.2454 14.4345 C 29.0496 14.8259 28.3645 15.4622 27.19 16.3429 C 26.9944 16.5387 26.8475 16.6854 26.7498 16.7833 C 29.0007 16.3919 30.7133 16.3429 31.8877 16.6366 C 33.4537 17.1259 34.4812 17.9577 34.9707 19.1322 C 35.3621 19.8173 35.2154 20.3556 34.5303 20.747 C 34.4324 20.747 34.3345 20.7959 34.2366 20.8938 C 33.0621 21.3831 32.0347 21.9703 31.1538 22.6554 C 30.0772 23.4384 28.6091 23.8298 26.7498 23.8298 C 26.6519 24.1235 26.3093 24.4171 25.7221 24.7107 C 25.6242 24.8086 25.4284 24.9554 25.1349 25.151 C 24.254 25.7382 23.3733 26.4233 22.4924 27.2063 C 24.1561 27.4999 25.5263 28.0871 26.6028 28.968 C 28.4624 27.2063 30.1261 25.7873 31.5942 24.7107 C 31.8877 24.3192 32.4749 24.3682 33.3558 24.8575 C 33.8451 25.4447 33.894 26.2766 33.5026 27.3531 C 31.8389 29.1147 30.273 30.7785 28.8049 32.3445 C 31.6431 32.7359 34.1877 33.2252 36.4386 33.8124 C 37.2216 33.8124 38.0045 34.5954 38.7875 36.1612 C 39.1789 36.9442 39.0812 37.3357 38.494 37.3357 C 36.7323 37.14 34.9217 36.6996 33.0621 36.0145 C 31.3984 35.4273 29.6858 35.1336 27.9242 35.1336 C 27.0433 38.559 25.6242 40.859 23.6668 42.0334 C 23.0796 42.6206 22.3456 42.6695 21.4649 42.1802 C 17.9416 40.5164 15.7884 38.5101 15.0056 36.1612 C 14.8098 35.4761 14.7609 35.0847 14.8586 34.9868 C 15.0544 35.0847 15.3481 35.4761 15.7396 36.1612 C 15.9354 34.3996 16.4247 33.3231 17.2075 32.9317 C 18.6756 31.7573 19.5563 30.6807 19.85 29.7019 C 16.3268 30.7785 13.88 31.8552 12.5098 32.9317 C 12.2163 33.1273 12.0695 33.1763 12.0695 33.0784 C 11.9716 32.9805 11.9716 32.7359 12.0695 32.3445 C 12.6568 30.5828 13.1949 29.6531 13.6842 29.5552 C 15.6417 29.0659 17.9905 27.6468 20.7307 25.298 C 19.3607 25.6894 18.5288 25.6894 18.2351 25.298 C 18.1372 25.8852 17.9905 26.2277 17.7947 26.3256 C 17.5012 26.5212 17.3054 26.4233 17.2075 26.0319 C 16.5226 24.3682 16.3268 23.2426 16.6203 22.6554 C 17.2075 21.1875 17.2565 20.1598 16.7672 19.5726 C 16.7672 18.9854 17.0119 18.7896 17.5012 18.9854 C 18.0884 19.5726 18.4309 20.0619 18.5288 20.4535 C 19.3117 19.6705 20.3882 18.9854 21.7584 18.3982 C 21.0733 18.594 20.4861 18.6429 19.9968 18.545 C 19.4096 18.545 19.3607 18.3982 19.85 18.1047 C 19.9479 18.0068 20.0458 17.9577 20.1435 17.9577 C 23.0796 16.6854 25.3796 14.9728 27.0433 12.8198 C 27.2391 12.624 27.337 12.4282 27.337 12.2326 C 27.2391 12.1347 27.0433 12.1347 26.7498 12.2326 C 25.2817 12.8198 23.1286 13.8963 20.2905 15.4622 C 19.8989 15.658 19.6054 15.8047 19.4096 15.9026 C 18.7245 16.294 18.333 16.1473 18.2351 15.4622 C 18.4309 14.4835 18.5777 13.7005 18.6756 13.1133 C 18.8714 12.4282 19.3117 12.0368 19.9968 11.9389 C 20.7798 11.841 22.101 10.7156 23.9605 8.5624 C 24.254 8.17099 24.4009 7.92633 24.4009 7.82843 C 24.4009 7.63263 24.254 7.53492 23.9605 7.53492 C 23.6668 7.53492 23.4712 7.48588 23.3733 7.38798 C 23.3733 7.29008 23.52 7.19237 23.8137 7.09447 C 24.7923 6.70287 25.82 6.94771 26.8965 7.82843 Z M 30.7133 17.5173 C 29.9305 17.9089 28.6091 18.3982 26.7498 18.9854 C 26.2603 19.1812 25.8689 19.328 25.5754 19.4259 C 26.4561 20.3066 26.5049 21.1384 25.7221 21.9215 C 25.9179 21.9215 26.1626 22.0682 26.4561 22.3619 C 28.707 21.481 30.3707 20.2087 31.4475 18.545 C 31.741 18.2514 31.79 17.9577 31.5942 17.6642 C 31.3984 17.4684 31.1049 17.4196 30.7133 17.5173 Z M 22.1989 20.1598 C 21.1223 20.3556 20.0456 20.9428 18.9691 21.9215 L 18.6756 23.3894 C 19.9479 22.998 21.1223 22.6554 22.1989 22.3619 C 22.7861 21.7747 23.0796 21.3342 23.0796 21.0405 C 23.0796 20.8449 22.7861 20.5512 22.1989 20.1598 Z M 31.007 25.7382 C 30.8112 25.934 30.5177 26.1787 30.1261 26.4724 C 28.9517 27.5489 27.9242 28.5275 27.0433 29.4084 C 27.337 29.7998 27.5326 30.2403 27.6305 30.7296 C 28.0219 30.3382 28.8049 29.4084 29.9793 27.9403 C 30.6644 27.1573 31.1538 26.5701 31.4475 26.1787 C 31.6431 25.8852 31.6921 25.6894 31.5942 25.5915 C 31.4963 25.4936 31.3005 25.5426 31.007 25.7382 Z M 22.3456 29.1147 C 22.4435 29.2126 22.5414 29.5061 22.6393 29.9956 C 22.737 30.1912 22.7861 30.3382 22.7861 30.4359 C 23.1775 30.2403 23.6668 30.4359 24.254 31.0231 C 24.5477 30.7296 24.8412 30.4849 25.1349 30.2891 C 24.4498 29.7998 23.52 29.4084 22.3456 29.1147 Z M 25.4284 30.8764 C 25.2328 31.1701 24.9881 31.4636 24.6944 31.7573 C 23.52 35.0847 22.0031 37.3357 20.1435 38.5101 C 23.2754 39.8803 25.0859 38.7548 25.5754 35.1336 C 25.1838 35.1336 24.7923 35.1336 24.4009 35.1336 C 23.8137 34.938 23.7647 34.5954 24.254 34.1061 C 24.7433 33.421 25.2817 32.9805 25.8689 32.7847 C 25.8689 32.0998 25.7221 31.4636 25.4284 30.8764 Z M 22.4924 32.3445 C 22.6882 32.0508 22.737 31.855 22.6393 31.7573 C 22.5414 31.6594 22.3456 31.6594 22.0521 31.7573 C 20.4861 33.421 18.4798 34.9868 16.0331 36.4549 C 16.8161 37.2378 17.55 37.7272 18.2351 37.9229 C 18.5288 37.1399 18.9203 36.4549 19.4096 35.8677 C 20.7798 34.6933 21.8074 33.5189 22.4924 32.3445 Z\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharBishop\",\n  props: {\n    player: String,\n  },\n})\nexport default class CharBishop extends Vue {\n  player!: string;\n}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharBishop\",\n  props: {\n    player: String,\n  },\n})\nexport default class CharBishop extends Vue {\n  player!: string;\n}\n","import { render } from \"./CharBishop.vue?vue&type=template&id=409be5e4\"\nimport script from \"./CharBishop.vue?vue&type=script&lang=ts\"\nexport * from \"./CharBishop.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <path\n    d=\"M 15.5603 10.8616 C 15.9452 10.092 16.6187 9.94748 17.5809 10.4286 C 18.5431 10.9098 19.2649 11.6795 19.746 12.7379 C 20.0346 13.5078 20.0828 14.1814 19.8903 14.7587 C 19.6017 15.2398 19.4092 15.9134 19.3129 16.7793 C 20.4676 16.587 21.2375 16.8756 21.6223 17.6454 C 21.9111 18.1265 22.2479 18.6558 22.6327 19.2331 C 22.9213 19.7142 22.777 20.1953 22.1996 20.6764 C 21.3337 21.2537 20.6119 21.5425 20.0346 21.5425 C 19.5535 21.7348 19.0244 21.398 18.447 20.5321 C 18.2545 21.9754 18.062 23.9481 17.8697 26.4498 C 17.7734 26.9309 17.7252 27.2677 17.7252 27.4602 C 19.1687 27.2677 20.4196 27.6045 21.478 28.4706 C 22.0554 29.1442 22.2959 30.0101 22.1996 31.0685 C 21.9111 31.8384 21.478 32.0789 20.9007 31.7902 C 20.3233 31.5016 19.746 31.0685 19.1687 30.4912 C 19.0724 30.4912 19.0244 30.4432 19.0244 30.3469 C 18.3508 29.6733 17.8215 29.3847 17.4366 29.4808 C 16.9555 31.2128 16.2337 32.8006 15.2716 34.244 C 14.1169 35.591 12.8659 36.1684 11.5189 35.976 C 11.2302 35.8798 11.0859 35.7835 11.0859 35.6873 C 11.0859 35.4949 11.1821 35.3987 11.3745 35.3987 C 12.6254 34.7251 13.732 33.0411 14.6942 30.3469 C 15.3678 28.3261 15.9452 25.3914 16.4262 21.5425 C 16.33 21.7348 16.1377 22.0236 15.8489 22.4084 C 14.7905 24.0442 14.0206 25.3914 13.5395 26.4498 C 13.1547 27.3159 12.7217 27.8933 12.2406 28.1818 C 11.8557 28.3743 11.5189 28.2781 11.2302 27.8933 C 10.9416 27.4122 10.6528 26.7866 10.3643 26.0168 C 9.88298 24.8621 9.97924 24.1887 10.6528 23.9962 C 10.9416 23.9962 11.4227 23.1301 12.0963 21.398 C 12.4811 20.2434 12.2886 19.3774 11.5189 18.8001 C 11.3264 18.7038 11.2784 18.6558 11.3745 18.6558 C 11.4707 18.5596 11.6632 18.5113 11.9518 18.5113 C 13.299 18.6076 14.2131 19.3294 14.6942 20.6764 C 14.6942 20.6764 14.6942 20.7246 14.6942 20.8209 C 14.7905 21.0132 14.9348 21.0132 15.1273 20.8209 C 15.7046 20.051 16.1857 19.4737 16.5705 19.0889 C 16.5705 18.6076 16.6187 17.5492 16.715 15.9134 C 16.8111 14.5662 16.8593 13.5078 16.8593 12.7379 C 16.763 11.4872 16.4262 11.0059 15.8489 11.2947 C 15.6564 11.4872 15.5121 11.5352 15.4158 11.439 C 15.4158 11.3427 15.4641 11.1504 15.5603 10.8616 Z M 19.1687 17.6454 C 19.0724 17.8379 18.9761 18.2228 18.8799 18.8001 C 18.7838 19.0887 18.7356 19.2812 18.7356 19.3774 C 19.3129 19.8585 19.746 19.7142 20.0346 18.9444 C 20.1308 18.2708 20.1308 17.8379 20.0346 17.6454 C 19.8422 17.4529 19.5535 17.4529 19.1687 17.6454 Z M 26.5298 10.8616 C 26.241 10.3805 26.0967 10.0437 26.0967 9.85122 C 26.193 9.6589 26.4335 9.6589 26.8184 9.85122 C 28.1656 10.14 29.5126 10.8616 30.8598 12.0163 C 31.5333 12.5936 31.5814 13.0747 31.004 13.4597 C 30.4267 13.8446 29.8494 14.5182 29.272 15.4803 C 30.3306 15.288 31.1003 15.0473 31.5814 14.7587 C 32.64 14.2776 33.6022 14.2776 34.4681 14.7587 C 35.2379 15.1435 36.2001 15.9134 37.3548 17.0681 C 37.9321 17.6454 37.9321 18.2708 37.3548 18.9444 C 36.97 19.3294 36.4889 20.2434 35.9115 21.6868 C 35.9115 21.9754 35.8633 22.1679 35.7672 22.2641 C 34.8049 24.8621 33.6502 26.7866 32.3032 28.0375 C 32.0144 28.4224 31.7739 28.6149 31.5814 28.6149 C 31.3891 28.6149 31.2446 28.4224 31.1485 28.0375 C 31.1485 27.9413 31.1003 27.7488 31.004 27.4602 C 30.9078 27.0754 30.8117 26.6904 30.7155 26.3055 C 29.7531 26.4018 28.7909 26.7386 27.8288 27.3159 C 27.2514 27.7007 26.5778 27.797 25.808 27.6045 C 25.3269 29.0479 25.0383 30.2026 24.9421 31.0685 C 24.7496 32.6082 25.0863 33.6184 25.9525 34.0995 C 29.0315 35.0619 32.1587 35.0619 35.3342 34.0995 C 37.6436 33.3299 38.7982 31.7421 38.7982 29.3365 C 38.8945 28.6629 38.9906 28.6149 39.0868 29.1922 C 39.2793 30.2507 39.6161 31.5496 40.0972 33.0893 C 40.1935 33.3779 40.2897 33.6184 40.386 33.811 C 40.8671 34.5808 40.7226 35.2542 39.9529 35.8316 C 38.3171 36.6976 35.7672 37.1307 32.3032 37.1307 C 28.7429 37.1307 26.193 36.7458 24.6533 35.976 C 23.3063 34.9176 22.729 33.4742 22.9213 31.6459 C 23.0175 30.4912 23.2581 28.6629 23.6431 26.1612 C 23.7392 25.3914 23.8354 24.814 23.9317 24.4292 C 24.0279 23.5631 23.8354 23.1783 23.3543 23.2745 C 22.9695 23.082 22.9213 22.7934 23.21 22.4084 C 23.6911 22.1199 24.1722 21.9754 24.6533 21.9754 C 24.8458 21.5905 25.2306 21.2537 25.808 20.9652 C 26.8664 20.5802 27.7325 20.1953 28.4061 19.8105 C 29.3683 19.3294 30.523 19.666 31.8701 20.8207 C 32.3512 21.302 32.3512 21.8311 31.8701 22.4084 C 31.4851 22.7934 31.0523 23.3226 30.571 23.9962 C 30.2824 24.4772 30.2824 24.7178 30.571 24.7178 C 31.2446 24.9103 31.6296 24.8621 31.7257 24.5735 C 32.7843 23.2263 33.6022 20.9652 34.1795 17.7897 C 34.1795 16.9238 33.6984 16.5388 32.7361 16.635 C 29.5608 17.4049 27.1069 18.367 25.3749 19.5217 C 24.7976 20.0028 24.4128 19.8105 24.2202 18.9444 C 24.1242 17.1161 24.3647 16.0577 24.9421 15.7691 C 25.6157 15.3841 26.3373 14.4219 27.1069 12.8824 C 27.492 12.4011 27.2995 11.7277 26.5296 10.8616 Z M 27.6845 23.1301 C 27.1071 23.3226 26.6259 23.4188 26.241 23.4188 C 26.4335 23.8037 26.4335 24.2847 26.241 24.8621 C 26.7221 24.766 27.1552 24.4772 27.54 23.9962 C 27.6363 23.8999 27.7325 23.8037 27.8288 23.7074 C 28.0213 23.5151 28.0693 23.3708 27.9731 23.2745 C 27.9731 23.082 27.8768 23.034 27.6845 23.1301 Z\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharCannon\",\n})\nexport default class CharCannon extends Vue {}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharCannon\",\n})\nexport default class CharCannon extends Vue {}\n","import { render } from \"./CharCannon.vue?vue&type=template&id=79a7fc82\"\nimport script from \"./CharCannon.vue?vue&type=script&lang=ts\"\nexport * from \"./CharCannon.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <path\n    v-if=\"player == 'w'\"\n    d=\"M 29.5093 7.39913 C 31.3052 7.39913 32.2031 8.19727 32.2031 9.79354 C 32.2031 11.3898 32.1532 12.8863 32.0534 14.2831 C 33.5499 13.2854 34.8469 13.2355 35.9443 14.1334 C 37.6404 14.8318 38.3387 16.0789 38.0394 17.8747 C 38.0394 19.471 38.0394 20.9675 38.0394 22.3642 C 38.1392 27.153 37.5905 30.1959 36.3933 31.4929 C 35.8944 32.291 35.4455 32.4407 35.0464 31.9419 C 34.6473 31.5428 34.2483 30.9442 33.8492 30.146 C 33.7494 29.9465 33.5998 29.6472 33.4003 29.2481 C 32.9014 28.2505 32.5024 27.602 32.2031 27.3027 C 32.3028 32.3908 32.2529 35.733 32.0534 37.3293 C 31.9536 38.8258 31.5546 40.6715 30.8562 42.8664 C 30.6567 43.3652 30.4571 43.6146 30.2576 43.6146 C 30.0581 43.5149 29.9084 43.1657 29.8087 42.5671 C 29.3098 38.2771 29.0604 33.6379 29.0604 28.6495 C 29.0604 24.7586 29.0604 21.8155 29.0604 19.8201 C 27.6637 20.5185 27.0651 21.5162 27.2646 22.8132 C 27.2646 25.008 26.8156 27.602 25.9177 30.595 C 25.818 30.9941 25.7182 31.1936 25.6184 31.1936 C 25.4189 31.2934 25.2194 31.1437 25.0198 30.7447 C 23.9224 29.2481 23.5732 27.7516 23.9723 26.2551 C 24.3713 25.1577 24.521 23.3619 24.4212 20.8677 C 24.4212 18.9721 24.072 18.0243 23.3737 18.0243 C 22.9746 17.8248 22.9746 17.5255 23.3737 17.1264 C 25.0697 16.7274 26.1671 16.9269 26.666 17.725 C 26.9653 18.0243 27.1648 18.1241 27.2646 18.0243 C 27.4641 17.8248 27.7634 17.5255 28.1625 17.1264 C 28.5616 16.7274 28.811 16.4281 28.9107 16.2285 C 29.3098 14.0336 29.3597 12.2378 29.0604 10.8411 C 29.0604 10.2425 28.9606 9.99308 28.7611 10.0928 C 28.5616 10.2924 28.4119 10.7413 28.3122 11.4397 C 28.2124 12.0383 28.1126 11.9884 28.0129 11.2901 C 28.0129 10.9907 27.963 10.5917 27.8632 10.0928 C 27.7634 9.79354 27.7135 9.54412 27.7135 9.34459 C 27.7135 8.04762 28.3121 7.39913 29.5093 7.39913 Z M 32.0534 18.174 C 31.9536 19.6705 31.9536 21.6658 32.0534 24.16 C 33.0511 25.1577 33.7495 25.7064 34.1485 25.8062 C 34.4478 25.906 34.6474 25.5568 34.7471 24.7586 C 34.9467 22.6635 34.9965 20.7181 34.8968 18.9222 C 34.797 17.6253 34.2982 17.0765 33.4003 17.2761 C 33.0012 17.3758 32.5523 17.6752 32.0534 18.174 Z M 14.9932 9.64389 C 14.7937 9.54412 14.7438 9.44436 14.8436 9.34459 C 14.8436 9.24482 14.9433 9.19494 15.1429 9.19494 C 16.0408 9.09517 17.6371 9.99308 19.9317 11.8887 C 20.4305 12.4873 20.2809 13.036 19.4827 13.5348 C 18.4851 13.6346 16.1904 15.0812 12.5988 17.8747 C 13.1974 20.2691 13.3471 22.015 13.0478 23.1125 C 13.1475 23.0127 13.3471 22.9129 13.6464 22.8132 C 14.7438 22.3143 15.9909 21.9153 17.3876 21.616 C 17.5872 21.616 17.8366 21.3167 18.1359 20.7181 C 18.1359 20.5185 18.1858 20.3689 18.2855 20.2691 C 18.4851 19.9698 18.4352 19.87 18.1359 19.9698 C 17.0384 20.3689 15.4921 19.9199 13.4967 18.6229 C 13.2972 18.5232 13.2473 18.4234 13.3471 18.3236 C 13.3471 18.3236 13.4468 18.2738 13.6464 18.174 C 14.0454 17.9745 14.5942 17.7749 15.2925 17.5754 C 16.4897 16.9768 17.3876 16.6276 17.9862 16.5278 C 18.1858 16.4281 18.3853 16.3283 18.5848 16.2285 C 18.6846 16.1288 18.7844 16.0789 18.8841 16.0789 C 19.383 15.7796 19.8818 15.7297 20.3807 15.9292 C 20.68 16.1288 21.0291 16.4281 21.4282 16.8271 C 21.7275 17.1264 22.0268 17.3758 22.3261 17.5754 C 22.6254 17.8747 22.6254 18.1241 22.3261 18.3236 C 22.0268 18.6229 21.8273 18.9222 21.7275 19.2215 C 21.6277 19.6206 21.4282 20.2192 21.1289 21.0174 C 21.0291 21.3167 20.9294 21.5162 20.8296 21.616 C 20.8296 21.616 20.8795 21.6658 20.9793 21.7656 C 21.3783 21.9651 21.5779 22.2146 21.5779 22.5139 C 21.5779 23.0127 21.2287 23.4617 20.5303 23.8607 C 20.231 23.9605 19.8319 24.1102 19.3331 24.3097 C 17.4375 24.8085 15.5918 25.457 13.796 26.2551 C 13.397 26.3549 13.3471 26.2551 13.6464 25.9558 C 14.4445 25.457 14.644 25.2076 14.245 25.2076 C 14.1452 25.2076 13.8459 25.1577 13.3471 25.0579 C 13.6464 25.1577 13.4967 25.1078 12.8981 24.9083 C 12.6986 25.9059 12.5988 26.6043 12.5988 27.0034 C 13.397 27.3027 14.0454 27.3027 14.5443 27.0034 C 15.7415 26.6043 16.789 26.2551 17.6869 25.9558 C 19.1835 25.3572 20.7298 25.6565 22.3261 26.8537 C 23.0245 27.3526 23.0744 27.9013 22.4758 28.4999 C 21.9769 28.9987 21.3783 29.8467 20.68 31.0439 C 20.68 30.9442 20.6301 30.9941 20.5303 31.1936 C 20.6301 31.2934 20.7797 31.3931 20.9793 31.4929 C 21.1788 31.6924 21.3284 31.892 21.4282 32.0915 C 21.528 32.6901 21.2786 33.1889 20.68 33.588 C 16.2902 33.4882 13.796 33.7377 13.1974 34.3363 C 13.1974 34.8351 13.1974 35.2841 13.1974 35.6831 C 13.1974 36.2817 13.0478 36.6309 12.7485 36.7307 C 12.3494 36.7307 12.0501 36.4813 11.8506 35.9824 C 10.4538 32.1913 10.0049 28.9488 10.5037 26.2551 C 10.9028 24.2598 11.1023 21.3665 11.1023 17.5754 C 11.2021 16.2784 11.6011 15.2309 12.2995 14.4327 C 13.3969 13.8341 14.4445 13.036 15.4422 12.0383 C 16.1405 11.1404 15.9909 10.3423 14.9932 9.64389 Z M 18.2855 28.4999 C 16.2902 29.1983 14.4445 29.6971 12.7485 29.9964 C 12.7485 30.1959 12.7983 30.4952 12.8981 30.8943 C 12.8981 31.3931 12.8981 31.7423 12.8981 31.9419 C 14.3946 31.6426 15.7415 31.3433 16.9387 31.044 C 17.4375 30.8444 17.9862 30.1959 18.5848 29.0985 C 18.6846 28.899 18.7345 28.6994 18.7345 28.4999 C 18.6347 28.4001 18.4851 28.4001 18.2855 28.4999 Z\"\n  />\n  <path\n    v-else-if=\"player == 'b'\"\n    d=\"M 19.1283 10.2443 C 19.0256 9.83348 19.231 9.67941 19.7446 9.78212 C 21.6962 10.8093 22.4666 12.2987 22.0557 14.2503 C 21.7476 15.5856 21.2854 19.078 20.6691 24.7275 C 20.8745 25.3438 21.1827 25.9601 21.5935 26.5764 C 21.9017 26.6791 21.5935 26.9873 20.6691 27.5008 C 20.7718 30.6851 20.8745 32.534 20.9772 33.0476 C 21.1827 35.5128 21.1313 37.5671 20.8231 39.2106 C 20.7204 39.5187 20.6177 39.7242 20.515 39.8269 C 20.4123 39.8269 20.2582 39.7242 20.0528 39.5187 C 19.1283 37.978 18.7174 34.2802 18.8201 28.4253 C 18.6147 28.528 18.2038 28.7848 17.5875 29.1957 C 16.4576 29.9147 15.6359 30.3769 15.1223 30.5824 C 15.8413 34.2802 15.3791 36.6427 13.7356 37.6698 C 13.2221 37.8753 12.8625 37.6698 12.6571 37.0535 C 12.7598 36.8481 12.8625 36.5399 12.9653 36.1291 C 13.1707 35.7182 13.2734 35.4614 13.2734 35.3587 C 13.6843 33.7152 13.5816 32.3285 12.9653 31.1987 C 11.8354 30.7878 11.065 30.3769 10.6541 29.966 C 10.0378 28.9389 10.0378 27.9631 10.6541 27.0386 C 12.1949 25.7033 13.068 24.6248 13.2734 23.803 C 12.6571 23.2894 12.1435 22.5191 11.7327 21.4919 C 11.6299 20.7729 11.9895 19.643 12.8112 18.1022 C 14.0438 16.0479 14.4033 14.3017 13.8897 12.8636 C 13.787 12.6582 13.787 12.5041 13.8897 12.4014 C 13.9924 12.4014 14.1465 12.4528 14.3519 12.5555 C 16.3036 13.5827 16.8172 15.7397 15.8927 19.0267 C 15.8927 19.3348 15.9441 19.4889 16.0468 19.4889 C 16.1495 19.5916 16.3549 19.5403 16.6631 19.3348 C 17.9984 18.5131 18.9229 18.359 19.4364 18.8726 C 19.5392 13.8395 19.4364 10.9634 19.1283 10.2443 Z M 21.7476 27.9631 C 22.4666 27.7576 23.237 27.5008 24.0587 27.1927 C 25.8049 26.8845 27.962 26.2682 30.5299 25.3438 C 30.3245 24.0085 29.9136 23.084 29.2973 22.5704 C 27.1402 24.3166 25.5481 25.1383 24.521 25.0356 C 22.9802 24.4193 22.3639 23.8544 22.672 23.3408 C 24.521 22.7245 25.959 22.0055 26.9862 21.1837 C 26.678 20.9783 26.2672 20.5161 25.7536 19.797 C 24.8291 20.3106 24.2128 20.362 23.9047 19.9511 C 23.9047 19.8484 23.8533 19.6943 23.7506 19.4889 C 23.6478 18.8726 23.5965 18.3076 23.5965 17.7941 C 23.4938 16.8696 23.9046 16.4074 24.8291 16.4074 C 26.5753 15.6884 28.3728 13.9422 30.2217 11.1688 C 30.5299 10.4498 30.4272 9.78212 29.9136 9.16582 C 29.6054 8.85767 29.5027 8.60087 29.6054 8.39544 C 29.7082 8.19001 30.0163 8.13865 30.5299 8.24136 C 31.0435 8.24136 31.5057 8.24136 31.9166 8.24136 C 32.5329 8.13865 33.406 8.49816 34.5359 9.3199 C 35.1522 9.62805 35.2549 10.1416 34.844 10.8607 C 34.0223 11.5797 33.2519 12.4014 32.5329 13.3259 C 33.2519 13.3259 33.8168 13.1718 34.2277 12.8636 C 34.6386 12.5555 35.0495 12.4528 35.4603 12.5555 C 36.1793 12.7609 36.847 13.1718 37.4633 13.7881 C 38.1823 14.4044 38.285 14.9693 37.7715 15.4829 C 35.6144 17.0237 33.0465 19.1294 30.0677 21.8 C 32.0193 21.8 33.2519 22.7245 33.7655 24.5734 C 37.7715 23.5462 39.8772 23.7517 40.0826 25.1897 C 40.3907 25.3951 40.5962 25.6006 40.6989 25.806 C 41.1098 26.1142 41.2638 26.3709 41.1611 26.5764 C 40.9557 26.8845 40.5962 27.0386 40.0826 27.0386 C 37.2065 27.0386 35.2035 27.1413 34.0736 27.3468 C 34.0736 28.2712 34.1764 30.2228 34.3818 33.2016 C 34.4845 34.9478 34.5359 35.975 34.5359 36.2832 C 34.4332 38.3375 33.9196 40.0323 32.9951 41.3677 C 32.5842 42.1894 31.9679 42.1894 31.1462 41.3677 C 30.2218 40.6486 28.2188 38.9024 25.1373 36.1291 C 24.8291 35.8209 24.675 35.6155 24.675 35.5128 C 24.7777 35.4101 25.0345 35.4614 25.4454 35.6669 C 26.3699 36.1804 27.8593 36.8481 29.9136 37.6698 C 30.8381 38.1834 31.3516 37.978 31.4544 37.0535 C 31.8652 33.972 31.7112 30.8392 30.9921 27.6549 C 29.0405 28.0658 26.8321 28.8362 24.3669 29.9661 C 27.1402 30.4796 28.4756 31.5068 28.3728 33.0476 C 28.2701 33.7666 27.4484 34.0747 25.9076 33.972 C 25.0859 33.7666 24.4182 33.6639 23.9046 33.6639 C 23.5965 33.6639 23.4424 33.6125 23.4424 33.5098 C 23.4424 33.3044 23.5965 33.1503 23.9046 33.0476 C 25.1373 32.534 25.5481 32.0204 25.1373 31.5068 C 25.0345 31.4041 24.9318 31.25 24.8291 31.0446 C 24.7264 30.8391 24.4696 30.4796 24.0587 29.966 C 23.0315 29.4525 22.2612 29.0416 21.7476 28.7334 C 21.3367 28.4253 21.3367 28.1685 21.7476 27.9631 Z M 12.1949 27.9631 C 13.1194 27.5522 15.3278 26.4737 18.8202 24.7275 L 19.1283 21.646 C 17.793 21.9541 16.1495 22.9813 14.1979 24.7275 C 13.5816 25.3438 12.7085 26.0628 11.5786 26.8845 C 11.3732 26.9873 11.2191 27.09 11.1164 27.1927 C 10.8082 27.3981 10.8082 27.6549 11.1164 27.9631 C 11.4245 28.1685 11.784 28.1685 12.1949 27.9631 Z M 33.6114 15.0207 C 33.8169 14.8153 33.8682 14.6612 33.7655 14.5585 C 33.5601 14.4558 33.2519 14.4558 32.8411 14.5585 C 31.9166 14.7639 30.7867 15.4316 29.4514 16.5615 C 30.3758 16.356 31.2489 16.4074 32.0707 16.7155 C 32.687 16.2019 33.2006 15.637 33.6114 15.0207 Z M 28.8351 19.797 C 29.3487 19.4889 29.8623 19.0267 30.3758 18.4104 C 29.7595 18.2049 29.2973 17.7941 28.9892 17.1778 C 28.7837 17.2805 28.5269 17.4859 28.2188 17.7941 C 27.6025 18.2049 27.1402 18.5131 26.8321 18.7185 C 26.9348 18.7185 27.0375 18.7699 27.1402 18.8726 C 27.962 19.078 28.5269 19.3862 28.8351 19.797 Z\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharKing\",\n  props: {\n    player: String,\n  },\n})\nexport default class CharKing extends Vue {\n  player!: string;\n}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharKing\",\n  props: {\n    player: String,\n  },\n})\nexport default class CharKing extends Vue {\n  player!: string;\n}\n","import { render } from \"./CharKing.vue?vue&type=template&id=5908f5cf\"\nimport script from \"./CharKing.vue?vue&type=script&lang=ts\"\nexport * from \"./CharKing.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <path\n    d=\"M 23.8961 11.9427 C 23.8961 11.6393 23.7444 11.1841 23.4411 10.5771 C 21.1144 10.3748 20.457 10.0714 21.4684 9.66684 C 25.4135 7.44133 28.1446 7.13797 29.662 8.75636 C 30.4711 9.46447 30.5218 9.97021 29.8137 10.2738 C 28.2965 11.2852 27.5377 12.2462 27.5377 13.1565 C 28.1446 13.1565 28.6505 13.6117 29.0551 14.5222 C 29.4596 15.1291 29.3584 15.6349 28.7515 16.0394 C 27.5377 16.7475 26.9307 17.7085 26.9307 18.9224 C 27.9424 18.3154 28.9539 18.4671 29.9653 19.3776 C 30.7746 19.9845 30.7746 20.5407 29.9653 21.0465 C 27.5377 22.2603 26.3238 23.626 26.3238 25.1433 C 29.2574 24.334 31.8368 23.9294 34.0621 23.9294 C 36.0853 23.9294 37.7543 24.7387 39.0692 26.3571 C 39.7773 27.2676 39.8785 28.0262 39.3727 28.6331 C 38.4623 29.9481 37.7037 31.516 37.0967 33.3368 C 36.0853 36.8771 34.8714 39.3048 33.4552 40.6198 C 32.7471 41.5302 32.1402 41.5807 31.6344 40.7715 C 30.2182 39.1531 28.9034 38.0404 27.6895 37.4334 C 27.2848 37.13 26.6779 36.4724 25.8688 35.4609 C 25.7676 35.2586 25.6664 35.1069 25.5652 35.0057 C 25.1607 34.6011 25.009 34.3988 25.11 34.3988 C 25.2112 34.2978 25.5147 34.3988 26.0205 34.7023 C 27.2343 35.5116 28.9034 36.0174 31.0275 36.2195 C 31.938 36.2195 32.5449 35.9667 32.8483 35.4609 C 33.4552 34.0447 34.1128 31.8701 34.8207 28.9365 C 34.9219 28.4307 34.9726 28.0767 34.9726 27.8745 C 35.276 26.5595 34.7197 25.8514 33.3035 25.7502 C 31.4828 25.4468 29.1056 25.8514 26.1721 26.964 C 25.97 27.5709 25.8181 28.3295 25.7169 29.24 C 25.6159 29.5434 25.5652 29.7458 25.5652 29.8469 C 26.071 29.5434 26.5262 29.3917 26.9307 29.3917 C 26.6274 29.0883 26.4757 28.886 26.4757 28.7848 C 26.4757 28.6836 26.6274 28.6836 26.9307 28.7848 C 27.6388 29.1893 28.4986 29.4424 29.5103 29.5434 C 30.8251 29.8469 31.8368 30.4539 32.5449 31.3642 C 32.7471 31.8701 32.6459 32.1734 32.2414 32.2746 C 31.1287 32.2746 30.2182 32.123 29.5103 31.8194 C 28.5998 31.2125 27.74 31.0608 26.9307 31.3642 C 25.3123 32.2746 24.149 33.1344 23.4411 33.9437 C 23.3399 34.0449 23.1882 34.1459 22.9858 34.2471 C 22.4801 34.7528 21.9744 35.0057 21.4684 35.0057 C 20.5582 34.9047 19.3948 34.2978 17.9788 33.1849 C 17.574 32.8816 17.2707 32.8309 17.0683 33.0332 C 15.4499 34.0447 14.4382 35.0564 14.0337 36.0678 C 13.8313 36.5736 13.4268 36.6748 12.8199 36.3714 C 11.4036 35.5621 10.4934 34.4495 10.0888 33.0332 C 10.1898 32.6287 10.4429 32.477 10.8474 32.578 C 11.6567 33.3873 13.3256 33.2356 15.8545 32.123 C 17.1695 31.617 18.2317 31.617 19.0408 32.123 C 19.9512 32.4263 20.9627 32.3251 22.0754 31.8194 C 21.4684 31.516 21.1144 31.2632 21.0134 31.0608 C 21.0134 30.8584 21.2663 30.7572 21.772 30.7572 C 22.7835 31.0608 23.3399 30.1503 23.4411 28.0262 C 22.1261 28.6331 21.0134 28.3802 20.1029 27.2676 C 19.5972 26.7616 19.6984 26.3571 20.4065 26.0537 C 20.811 26.0537 21.772 25.4468 23.2892 24.233 C 23.4916 24.1318 23.6433 23.5754 23.7444 22.5639 C 22.3282 23.5754 21.3675 23.4237 20.8615 22.1086 C 20.457 21.2994 20.6087 20.7431 21.3168 20.4396 C 21.5191 20.2374 21.9237 19.9338 22.5306 19.5293 C 23.0363 19.1247 23.3904 18.8717 23.5928 18.7707 C 23.8961 18.5683 24.048 18.0119 24.048 17.1016 C 23.7444 17.2028 23.4411 17.304 23.1375 17.405 C 22.9352 17.5061 22.7835 17.5568 22.6823 17.5568 C 21.772 17.8602 21.1651 17.3545 20.8615 16.0394 C 20.6593 15.028 20.9122 14.421 21.6203 14.2187 C 22.4294 13.9153 23.1882 13.1565 23.8961 11.9427 Z M 16.3097 10.8807 C 16.2085 10.5771 16.158 10.3748 16.158 10.2738 C 16.158 10.1726 16.3097 10.2231 16.6131 10.4254 C 17.4224 10.7288 18.0798 11.1336 18.5857 11.6393 C 18.8891 11.8417 19.3443 11.5381 19.9512 10.7288 C 20.457 10.3243 20.7098 10.1726 20.7098 10.2738 C 20.811 10.3748 20.7605 10.7288 20.5582 11.3357 C 20.2546 11.9427 19.9512 13.0555 19.6477 14.6739 C 19.7489 14.5727 19.7489 14.7244 19.6477 15.1291 C 18.9396 22.0075 18.6867 26.3571 18.8891 28.1779 C 18.6867 29.2905 18.3326 29.6446 17.8269 29.24 C 16.2085 27.1157 15.6521 24.8399 16.158 22.4122 C 17.1695 16.343 17.22 12.4991 16.3097 10.8807 Z\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharKnight\",\n})\nexport default class CharKnight extends Vue {}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharKnight\",\n})\nexport default class CharKnight extends Vue {}\n","import { render } from \"./CharKnight.vue?vue&type=template&id=0c9ff7f2\"\nimport script from \"./CharKnight.vue?vue&type=script&lang=ts\"\nexport * from \"./CharKnight.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <path\n    v-if=\"player == 'w'\"\n    d=\"M 24.8032 8.57869 C 27.336 8.87094 28.8459 9.55284 29.333 10.6244 C 29.9175 11.5985 29.9175 12.3292 29.333 12.8162 C 27.4821 13.8878 25.9722 14.5697 24.8032 14.8619 C 23.2446 15.2516 21.8808 15.7874 20.7118 16.4693 C 22.0756 17.2486 22.8549 18.2714 23.0497 19.5378 C 24.7058 18.7585 26.0209 18.0766 26.995 17.4921 C 27.9692 16.1283 29.333 15.8848 31.0864 16.7615 C 32.8399 17.8331 33.4244 19.0021 32.8399 20.2684 C 31.7683 22.8012 30.4532 24.9443 28.8946 26.6978 C 35.0317 26.0159 38.8309 26.6004 40.2921 28.4513 C 40.4869 29.1332 40.0486 29.669 38.977 30.0586 C 36.6391 29.5715 34.5934 29.6202 32.8399 30.2047 C 32.3528 30.3022 31.0377 30.497 28.8946 30.7892 C 28.1153 30.8866 28.0666 30.7892 28.7485 30.497 C 29.2355 30.3996 29.9662 30.0099 30.9403 29.328 C 30.8429 29.328 30.8916 29.2793 31.0864 29.1819 C 30.8916 29.1819 30.5507 29.2306 30.0636 29.328 C 27.9205 29.5228 26.1183 29.7664 24.6571 30.0586 C 21.9295 30.4483 19.4454 30.9841 17.2049 31.666 C 14.8669 32.5427 13.1622 33.0298 12.0906 33.1272 C 11.4087 33.1272 11.0677 32.9323 11.0677 32.5427 C 11.0677 32.5427 11.019 32.4453 10.9216 32.2504 C 10.9216 32.153 10.7268 31.8121 10.3371 31.2276 C 10.3371 30.156 11.1652 29.669 12.8212 29.7664 C 13.016 29.8638 13.3083 29.8638 13.6979 29.7664 C 15.5488 29.2793 17.4484 28.7435 19.3967 28.159 C 18.4225 26.0159 18.179 24.7008 18.6661 24.2137 C 19.1531 23.5318 19.4941 22.168 19.6889 20.1223 C 19.6889 19.4404 19.4941 19.0021 19.1044 18.8072 C 18.3251 18.7098 17.8868 17.8331 17.7893 16.177 C 17.7893 15.3003 18.5687 14.4723 20.1273 13.693 C 21.8808 12.9137 23.3907 11.8908 24.6571 10.6244 C 25.4364 10.1373 25.4364 9.60156 24.6571 9.01707 C 24.4622 8.91965 24.3648 8.77353 24.3648 8.5787 C 24.4622 8.48129 24.6084 8.48129 24.8032 8.5787 Z M 28.0179 20.7068 C 27.7256 20.9016 27.1411 21.2426 26.2644 21.7297 C 24.8032 22.509 23.7803 23.1422 23.1959 23.6292 C 22.6114 24.1163 22.2704 25.2853 22.173 27.1362 C 22.173 27.5258 22.4652 27.5258 23.0497 27.1362 C 26.167 24.6034 27.823 22.4603 28.0179 20.7068 Z M 35.0317 34.8806 C 35.5188 36.147 35.2266 37.4134 34.155 38.6798 C 33.8627 39.1669 33.5705 39.4104 33.2783 39.4104 C 32.986 39.4104 32.7425 39.1669 32.5477 38.6798 C 31.7683 37.316 30.7455 36.2931 29.4791 35.6112 C 29.1868 35.319 29.0407 35.1242 29.0407 35.0268 C 29.0407 34.9293 29.2356 34.9293 29.6252 35.0268 C 30.8916 35.319 31.4274 35.1242 31.2326 34.4423 C 31.0377 33.4681 30.161 32.9323 28.6024 32.8349 C 28.3101 32.8349 28.164 32.7862 28.164 32.6888 C 28.164 32.494 28.3101 32.3966 28.6024 32.3966 C 32.0119 31.9095 34.155 32.7375 35.0317 34.8806 Z M 18.0816 32.981 C 18.2764 32.6888 18.4712 32.5427 18.6661 32.5427 C 18.8609 32.6401 18.9096 32.8349 18.8122 33.1272 C 18.6174 34.1013 18.7635 34.6371 19.2506 34.7345 C 19.6402 34.6371 20.176 34.4423 20.8579 34.15 C 21.9295 33.7604 22.9523 33.4194 23.9265 33.1272 C 24.6084 32.8349 24.6571 32.9323 24.0726 33.4194 C 20.8579 35.1729 19.1044 37.0238 18.8122 38.972 C 18.1303 39.8488 17.3997 39.9462 16.6204 39.2643 C 15.5488 37.0238 15.4027 35.6599 16.182 35.1729 C 16.4743 35.0755 17.1075 34.3448 18.0816 32.981 Z\"\n  />\n  <path\n    v-else-if=\"player == 'b'\"\n    d=\"M 27.7177 12.7999 C 27.4348 12.9884 27.2935 13.1297 27.2935 13.224 C 27.2935 13.3183 27.4348 13.3183 27.7177 13.224 C 28.377 13.0355 29.0846 12.7999 29.8373 12.5172 C 30.7801 12.0458 31.7229 12.4229 32.6656 13.6482 C 33.042 14.2136 32.995 14.6376 32.5245 14.9204 C 31.9581 15.2031 31.1112 15.3916 29.9803 15.4859 C 28.7552 15.6745 27.1049 16.24 25.0316 17.1824 C 23.7121 17.7478 22.7697 18.8788 22.2042 20.5752 C 21.9216 21.4233 22.0156 21.9888 22.487 22.2717 C 22.6754 22.4602 23.0053 22.2717 23.4765 21.7062 C 23.4765 21.6119 23.5237 21.5176 23.618 21.4233 C 23.8064 21.1407 24.042 20.7638 24.3248 20.2924 C 25.9269 17.465 27.3407 16.0984 28.5652 16.1927 C 30.2626 16.4756 31.0172 17.9364 30.8272 20.5752 C 32.2422 20.6695 33.1361 21.0935 33.5143 21.8475 C 33.8907 22.2244 33.8436 22.6958 33.3732 23.2613 C 31.7699 24.9577 29.6021 26.2771 26.8693 27.2196 C 26.9636 27.3137 26.9636 27.4552 26.8693 27.6436 C 26.8693 27.7379 26.8693 27.8322 26.8693 27.9264 C 26.9636 27.9264 27.1051 27.9264 27.2935 27.9264 C 28.9905 27.6436 30.3567 27.4552 31.3935 27.361 C 32.3363 27.361 33.0891 27.2667 33.6554 27.0781 C 33.7495 27.0781 33.9848 27.0781 34.3612 27.0781 C 35.7762 26.984 36.766 27.0311 37.3306 27.2196 C 38.4616 27.5966 39.122 28.3034 39.3102 29.34 C 39.5925 30.471 38.7909 30.8481 36.9072 30.471 C 32.9479 29.6229 29.6491 29.4343 27.0109 29.9055 C 26.8223 34.4293 26.5867 37.9637 26.3039 40.5083 C 26.3039 40.6968 26.2568 40.9324 26.1625 41.2152 C 26.0683 41.5922 26.0212 41.922 26.0212 42.2048 C 26.0212 42.5817 25.8799 42.8174 25.5971 42.9116 C 25.3144 42.9116 25.1259 42.7231 25.0316 42.3461 C 24.2776 39.99 23.9006 35.9845 23.9006 30.3297 C 20.8847 31.2723 17.8689 32.2617 14.853 33.2984 C 13.1565 34.0524 12.0726 34.241 11.6014 33.8639 C 11.036 33.5812 10.8476 32.9687 11.036 32.0261 C 11.036 32.1204 11.036 32.0733 11.036 31.8848 C 11.2245 31.3193 11.5072 31.1308 11.8843 31.3193 C 12.1669 31.5079 13.3921 31.1308 15.5598 30.1884 C 17.1619 29.34 19.801 28.3034 23.4765 27.0781 C 23.3822 26.7955 23.1938 26.6069 22.911 26.5127 C 22.2512 26.3243 21.9686 26.0415 22.0629 25.6645 C 21.4031 24.345 20.5078 24.345 19.3768 25.6645 C 18.7171 26.4186 18.0573 26.984 17.3977 27.361 C 17.0206 27.5495 16.785 27.5966 16.6907 27.5023 C 16.5965 27.408 16.5494 27.1724 16.5494 26.7955 C 16.5494 26.6069 16.5965 26.3713 16.6907 26.0887 C 16.6907 25.3346 16.785 24.7221 16.9736 24.2507 C 17.1619 23.8738 17.4448 23.5439 17.8217 23.2613 C 18.1045 23.167 18.4344 22.8371 18.8113 22.2717 C 18.7171 22.3659 18.7643 22.2717 18.9527 21.9888 C 19.6124 21.0464 20.7434 19.5856 22.3455 17.6065 C 22.6284 17.2294 22.5811 17.1824 22.2042 17.465 C 18.6228 19.4443 16.2668 19.8212 15.1358 18.596 C 14.3818 17.6536 14.2405 16.7582 14.7117 15.9101 C 14.9 15.6272 15.0886 15.4859 15.2771 15.4859 C 15.4655 15.3916 15.5598 15.4859 15.5598 15.7686 C 15.5598 16.0514 15.8897 16.1927 16.5494 16.1927 C 18.1516 16.1927 19.6124 15.9101 20.9319 15.3446 C 21.3088 15.156 21.2618 15.0618 20.7904 15.0618 C 20.1308 15.156 19.0469 15.156 17.539 15.0618 C 16.9736 15.0618 16.9263 14.9675 17.3975 14.7791 C 20.4135 14.402 22.5811 13.4126 23.9006 11.8102 C 24.3718 11.4333 24.4191 11.0564 24.042 10.6793 C 23.7593 10.4909 23.4765 10.161 23.1938 9.68981 C 22.8167 8.93578 22.4398 8.3703 22.0629 7.99338 C 21.78 7.61627 22.0156 7.47495 22.7697 7.56923 C 25.3144 7.56923 27.1049 8.08766 28.1418 9.12434 C 29.1787 10.3496 29.0375 11.5746 27.7177 12.7999 Z M 28.0003 17.041 C 27.0579 16.8525 26.1625 17.9364 25.3144 20.2924 C 25.2201 20.6695 25.0788 21.3763 24.8903 22.413 C 24.6074 23.3554 24.4191 24.0624 24.3248 24.5336 C 24.4191 24.5336 24.5133 24.5336 24.6074 24.5336 C 24.796 24.6278 24.8903 24.6749 24.8903 24.6749 C 24.796 24.2037 25.1729 23.4497 26.0212 22.413 C 26.9636 21.0937 27.6234 20.0097 28.0003 19.1614 C 28.4711 18.1248 28.4711 17.418 28.0003 17.041 Z M 29.2728 23.1198 C 28.6123 22.9314 27.9062 23.3083 27.1522 24.2507 C 26.681 24.9105 26.3039 25.2404 26.0212 25.2404 C 26.1155 25.2404 26.2568 25.3817 26.4454 25.6645 C 26.5397 25.7588 26.5867 25.8059 26.5867 25.8059 C 27.435 25.3346 28.2359 24.8162 28.9905 24.2507 C 29.6491 23.7795 29.7432 23.4026 29.2728 23.1198 Z M 23.9006 27.9264 C 22.2042 28.3034 20.1779 28.8688 17.8217 29.6229 C 17.539 29.8114 17.3505 29.9055 17.2562 29.9055 C 17.0678 29.9998 16.9265 30.0941 16.8322 30.1884 C 16.8322 30.2826 16.9265 30.3297 17.1149 30.3297 C 17.7747 30.2354 20.0366 29.6229 23.9006 28.4919 C 23.9006 28.3034 23.9006 28.115 23.9006 27.9264 Z\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharPawn\",\n  props: {\n    player: String,\n  },\n})\nexport default class CharPawn extends Vue {\n  player!: string;\n}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharPawn\",\n  props: {\n    player: String,\n  },\n})\nexport default class CharPawn extends Vue {\n  player!: string;\n}\n","import { render } from \"./CharPawn.vue?vue&type=template&id=b4cc56ba\"\nimport script from \"./CharPawn.vue?vue&type=script&lang=ts\"\nexport * from \"./CharPawn.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <path\n    d=\"M 23.4075 15.5753 C 21.7006 15.8767 19.6924 16.7802 17.3831 18.2864 C 15.4755 19.4913 14.9733 20.4953 15.8771 21.2987 C 15.8771 21.2987 15.9775 21.3488 16.1782 21.4492 C 16.3791 21.4492 16.6301 21.5998 16.9314 21.9011 C 18.1363 19.9933 20.2949 18.4873 23.4075 17.3827 Z M 29.5827 25.0639 C 30.1852 23.2565 30.6369 21.4492 30.9382 19.6419 C 31.2393 18.3366 30.7876 17.7844 29.5827 17.9851 C 28.4781 18.0856 27.3235 18.3869 26.1186 18.8889 C 26.1186 19.4913 26.1186 20.0938 26.1186 20.6962 C 26.9218 20.6962 27.5242 20.8468 27.926 21.1481 C 28.5284 21.7505 28.5284 22.2525 27.926 22.6541 C 27.424 22.9554 27.0222 23.357 26.7211 23.859 C 26.7211 23.9594 26.6206 24.1603 26.4198 24.4614 C 26.3193 24.7628 26.2191 25.0138 26.1186 25.2144 C 26.9218 25.3149 27.675 25.5158 28.3778 25.8169 C 28.4781 25.2144 28.679 25.0138 28.9803 25.2144 C 29.2814 25.4153 29.4823 25.3652 29.5827 25.0639 Z M 22.9558 24.612 C 22.253 24.612 21.3492 24.4614 20.2448 24.1603 C 19.8432 24.0599 19.6423 23.9093 19.6423 23.7084 C 19.6423 23.4071 19.8432 23.1561 20.2448 22.9554 C 20.6463 22.6541 21.4496 22.2022 22.6545 21.5998 C 22.9558 21.4995 23.1565 21.3991 23.257 21.2987 L 23.257 19.6419 C 22.4537 20.1439 21.4496 20.3949 20.2448 20.3949 C 18.4374 20.7966 17.7849 21.7505 18.2869 23.2565 C 18.7889 24.361 19.0399 25.8169 19.0399 27.6242 C 19.0399 27.8251 19.1904 27.8752 19.4917 27.775 C 19.7929 27.6745 20.1946 27.3732 20.6966 26.8712 C 20.8973 26.6705 21.2488 26.3692 21.751 25.9676 C 21.9516 25.7668 22.1022 25.6162 22.2026 25.5158 C 22.6044 25.3149 22.8554 25.0138 22.9558 24.612 Z M 25.9681 32.7451 C 25.9681 37.9662 25.7169 41.0287 25.2149 41.9323 C 25.1144 42.4344 24.9639 42.6854 24.7632 42.6854 C 24.5623 42.7858 24.3614 42.585 24.1607 42.0829 C 23.5583 40.1752 23.257 37.2633 23.257 33.3475 C 21.2488 33.6487 19.0902 34.3014 16.7807 35.3054 C 13.8689 36.5103 11.911 36.1589 10.907 34.2511 C 10.8065 33.8495 10.8567 33.4981 11.0575 33.197 C 11.2584 33.0965 11.5595 33.0965 11.9611 33.197 C 12.5635 33.3976 13.3669 33.2972 14.3709 32.8956 C 16.7807 32.0923 19.6924 31.2892 23.1064 30.4859 C 23.1064 30.1847 23.1064 29.8834 23.1064 29.5823 C 22.6044 29.5823 21.8011 29.6825 20.6966 29.8834 C 21.3995 29.6825 21.2488 29.6825 20.2448 29.8834 C 18.5379 30.285 17.4835 29.3313 17.082 27.0218 C 16.8811 25.7166 16.2787 24.612 15.2746 23.7084 C 13.8689 22.5035 13.9192 20.9973 15.4252 19.19 C 16.831 17.7844 18.6383 16.5795 20.8472 15.5753 C 20.1443 15.2742 19.5419 14.9228 19.0399 14.5212 C 18.6383 14.2199 18.4374 13.9689 18.4374 13.768 C 18.5379 13.5673 18.7889 13.4166 19.1904 13.3163 C 20.6966 13.015 22.1022 12.513 23.4075 11.8101 C 23.4075 10.5048 23.0561 9.45065 22.3534 8.64733 C 22.0521 8.34601 21.9516 8.09501 22.0521 7.89433 C 22.1525 7.59301 22.4537 7.39213 22.9558 7.29188 C 23.9599 6.99056 25.0643 7.24157 26.2692 8.04489 C 26.8716 8.54689 27.0222 9.14934 26.7211 9.85222 C 26.6206 10.1533 26.5705 10.5048 26.5705 10.9065 C 27.5745 10.4043 28.7291 10.5551 30.0344 11.3582 C 30.5364 11.6596 30.7876 12.011 30.7876 12.4126 C 30.6872 12.7139 30.3859 12.9649 29.8839 13.1656 C 29.5827 13.266 29.0304 13.517 28.2271 13.9188 C 27.424 14.2199 26.8215 14.4709 26.4198 14.6718 C 26.3193 15.2742 26.2692 15.9268 26.2692 16.6297 C 27.4741 16.2281 28.8295 15.9771 30.3357 15.8767 C 32.5446 15.6758 34.1511 16.7301 35.1553 19.0394 C 35.4564 19.8428 35.3058 20.5958 34.7034 21.2987 C 33.7996 22.5035 32.9965 23.7585 32.2936 25.0639 C 31.7916 26.2688 30.7874 27.0218 29.2814 27.3231 C 28.177 27.4235 27.0725 27.8752 25.9679 28.6785 C 25.9679 29.1805 25.9679 29.6324 25.9679 30.034 C 27.8756 29.7329 29.4823 29.5823 30.7874 29.5823 C 31.0887 29.5823 31.4903 29.532 31.9923 29.4315 C 32.5948 29.4315 33.0466 29.3814 33.348 29.281 C 36.4606 28.779 38.6695 29.4315 39.9748 31.2389 C 40.3764 31.8413 40.527 32.2932 40.4265 32.5945 C 40.3263 32.8956 39.9245 33.0965 39.2216 33.197 C 38.0168 33.3976 36.5107 33.197 34.7034 32.5945 C 32.4945 31.9921 29.5825 32.0422 25.9679 32.7451 Z\"\n  />\n</template>\n\n<script lang=\"ts\">\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharRook\",\n})\nexport default class CharRook extends Vue {}\n</script>\n","\nimport { Options, Vue } from \"vue-class-component\";\n\n@Options({\n  name: \"CharRook\",\n})\nexport default class CharRook extends Vue {}\n","import { render } from \"./CharRook.vue?vue&type=template&id=b2018792\"\nimport script from \"./CharRook.vue?vue&type=script&lang=ts\"\nexport * from \"./CharRook.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from \"vue-class-component\";\nimport CharAdvisor from \"./CharAdvisor.vue\";\nimport CharBishop from \"./CharBishop.vue\";\nimport CharCannon from \"./CharCannon.vue\";\nimport CharKing from \"./CharKing.vue\";\nimport CharKnight from \"./CharKnight.vue\";\nimport CharPawn from \"./CharPawn.vue\";\nimport CharRook from \"./CharRook.vue\";\n\n@Options({\n  name: \"ChessPiece\",\n  props: {\n    piece: String,\n    position: String,\n    highlight: false,\n  },\n  data() {\n    return {\n      highDist: 3.5,\n      highLen: 12,\n    };\n  },\n  computed: {\n    // get the piece type\n    type(): string {\n      return this.piece.toLowerCase();\n    },\n    // the the piece color\n    textColor(): string {\n      if (\"a\" <= this.piece && this.piece <= \"z\") {\n        return \"rgb(5, 8, 202)\";\n      } else if (\"A\" <= this.piece && this.piece <= \"Z\") {\n        return \"#9b0606\";\n      }\n      return \"#793131\";\n    },\n    // get the player symbol\n    player(): string {\n      if (\"a\" <= this.piece && this.piece <= \"z\") {\n        return \"b\";\n      } else if (\"A\" <= this.piece && this.piece <= \"Z\") {\n        return \"w\";\n      }\n      return \" \";\n    },\n    // caculate the traslation of the piece string format position\n    translate(): string {\n      if (this.position == undefined) {\n        return \"translate(0 0)\";\n      }\n      var dx = this.position.charCodeAt(0) - \"a\".charCodeAt(0);\n      var dy = this.position.charCodeAt(1) - \"0\".charCodeAt(0);\n      return `translate(${dx * 50} ${dy * 50})`;\n    },\n    highlightPath() {\n      var dx = this.highDist;\n      if (this.piece == \" \") {\n        dx += 4;\n      }\n      var len = this.highLen;\n      return [\n        {\n          id: this.position + \":h0\",\n          path: `M ${dx},${dx + len} l 0,${-len} l ${len},0`,\n        },\n        {\n          id: this.position + \":h1\",\n          path: `M ${50 - dx},${dx + len} l 0,${-len} l ${-len},0`,\n        },\n        {\n          id: this.position + \":h2\",\n          path: `M ${dx},${50 - dx - len} l 0,${len} l ${len},0`,\n        },\n        {\n          id: this.position + \":h3\",\n          path: `M ${50 - dx},${50 - dx - len} l 0,${len} l ${-len},0`,\n        },\n      ];\n    },\n  },\n  components: {\n    CharAdvisor,\n    CharBishop,\n    CharCannon,\n    CharKing,\n    CharKnight,\n    CharPawn,\n    CharRook,\n  },\n  methods: {\n    pieceClicked() {\n      this.$emit(\"pieceClicked\", this.position);\n    },\n  },\n})\nexport default class ChessPiece extends Vue {\n  piece!: string;\n  position!: string;\n}\n","import { render } from \"./ChessPiece.vue?vue&type=template&id=3946065c\"\nimport script from \"./ChessPiece.vue?vue&type=script&lang=ts\"\nexport * from \"./ChessPiece.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","const North: [number, number] = [-1, 0];\nconst South: [number, number] = [1, 0];\nconst West: [number, number] = [0, -1];\nconst East: [number, number] = [0, 1];\nconst NorthEast: [number, number] = [-1, 1];\nconst NorthWest: [number, number] = [-1, -1];\nconst SouthEast: [number, number] = [1, 1];\nconst SouthWest: [number, number] = [1, -1];\n\n// check if the position is within the chess board\nfunction isPositionValid(p: [number, number]): boolean {\n  return p[0] >= 0 && p[0] <= 9 && p[1] >= 0 && p[1] <= 8;\n}\n\nfunction isInPalace(p: [number, number], t: string): boolean {\n  if (p[1] < 3 || p[1] > 5) {\n    return false;\n  }\n  if (t == \"b\" && p[0] >= 0 && p[0] <= 2) {\n    return true;\n  }\n  if (t == \"w\" && p[0] >= 7 && p[0] <= 9) {\n    return true;\n  }\n  return false;\n}\n\n// add a position and a step\nfunction add(p: [number, number], s: [number, number]): [number, number] {\n  return [p[0] + s[0], p[1] + s[1]];\n}\n\n// absolution value\nfunction diff(a: number, b: number): number {\n  const d = a - b;\n  if (d < 0) {\n    return -d;\n  }\n  return d;\n}\n\nfunction abs(a: [number, number], b: [number, number]): [number, number] {\n  return [diff(a[0], b[0]), diff(a[1], b[1])];\n}\n\nexport function strToPos(s: string): [number, number] {\n  return [s.charCodeAt(1) - 48, s.charCodeAt(0) - 97];\n}\n\nfunction posToStr(p: [number, number]): string {\n  return String.fromCharCode(p[1] + 97) + String.fromCharCode(p[0] + 48);\n}\n\nexport class Ucci {\n  matrix!: string[][];\n\n  // initialize the maps\n  constructor(copy: string[][]) {\n    this.matrix = copy;\n  }\n\n  // Read the chess board state from a FEN string\n  readFEN(fen: string): boolean {\n    const lines = fen.split(\"/\");\n    if (lines.length < 10) {\n      return false;\n    }\n    const mat: string[][] = [];\n    for (let i = 0; i <= 9; i++) {\n      const row: string[] = [];\n      const line = lines[i];\n      for (let k = 0; k < line.length; k++) {\n        const c = line[k];\n        if (c >= \"1\" && c <= \"9\") {\n          for (let j = 0; j < Number(c); j++) {\n            row.push(\" \");\n          }\n        } else {\n          row.push(c);\n        }\n      }\n      mat.push(row);\n    }\n    this.matrix = mat;\n    return true;\n  }\n\n  // write the chess state into a FEN string\n  writeFEN(): string {\n    const lines: string[] = [];\n    for (const row of this.matrix) {\n      let line = \"\";\n      let i = 0;\n      while (i < 9) {\n        if (row[i] == \" \") {\n          let count = 0;\n          while (i < 9 && row[i] == \" \") {\n            count++;\n            i++;\n          }\n          line += count;\n        } else {\n          line += row[i];\n          i++;\n        }\n      }\n      lines.push(line);\n    }\n    return lines.join(\"/\");\n  }\n\n  getTeam(p: string): string[] {\n    const ret: string[] = [];\n    for (let i = 0; i <= 9; i++) {\n      for (let j = 0; j <= 8; j++) {\n        if (this.getPlayer([i, j]) == p) {\n          ret.push(posToStr([i, j]));\n        }\n      }\n    }\n    return ret;\n  }\n\n  set(p: [number, number], v: string): void {\n    this.matrix[p[0]][p[1]] = v;\n  }\n  // get the piece of a position, need to ensure that the position is valid\n  get(p: [number, number]): string {\n    return this.matrix[p[0]][p[1]];\n  }\n\n  getByStr(s: string): string {\n    const p = strToPos(s);\n    return this.matrix[p[0]][p[1]];\n  }\n\n  getLabel(p: [number, number]): string {\n    return this.matrix[p[0]][p[1]].toLowerCase();\n  }\n\n  getPlayer(p: [number, number]): string {\n    const c = this.matrix[p[0]][p[1]];\n    if (\"a\" <= c && c <= \"z\") {\n      return \"b\";\n    } else if (\"A\" <= c && c <= \"Z\") {\n      return \"w\";\n    }\n    return \" \";\n  }\n\n  // get valid moves for a King\n  getKingMoves(p: [number, number]): [number, number][] {\n    const ret: [number, number][] = [];\n    const player = this.getPlayer(p);\n    for (const d of [North, South, East, West]) {\n      const t = add(p, d);\n      if (isInPalace(t, player) && this.getPlayer(t) != player) {\n        ret.push(t);\n      }\n    }\n    const d = player == \"w\" ? North : South;\n    for (let t = add(p, d); isPositionValid(t); t = add(t, d)) {\n      if (this.getLabel(t) == \"k\") {\n        ret.push(t);\n      }\n      break;\n    }\n    return ret;\n  }\n\n  // get valid moves for a Rook\n  getRookMoves(p: [number, number]): [number, number][] {\n    const ret: [number, number][] = [];\n    const team = this.getPlayer(p);\n    for (const d of [North, South, East, West]) {\n      for (let t = add(p, d); isPositionValid(t); t = add(t, d)) {\n        if (this.get(t) == \" \") {\n          ret.push(t);\n        } else {\n          if (this.getPlayer(t) != team) {\n            ret.push(t);\n          }\n          break;\n        }\n      }\n    }\n    return ret;\n  }\n\n  // get all the possible moves for a Canon\n  getCanonMoves(p: [number, number]): [number, number][] {\n    const ret: [number, number][] = [];\n    const team = this.getPlayer(p);\n    for (const d of [North, South, East, West]) {\n      let jumped = false;\n      for (let t = add(p, d); isPositionValid(t); t = add(t, d)) {\n        if (jumped == false) {\n          if (this.get(t) == \" \") {\n            ret.push(t);\n          } else {\n            jumped = true;\n          }\n        } else if (this.get(t) != \" \") {\n          if (this.getPlayer(t) != team) {\n            ret.push(t);\n          }\n          break;\n        }\n      }\n    }\n    return ret;\n  }\n\n  // return the possible moves for a Knight\n  getKnightMoves(p: [number, number]): [number, number][] {\n    const can: [number, number][] = [];\n    const team = this.getPlayer(p);\n    for (const d of [North, West, South, East]) {\n      const t = add(p, d);\n      if (isPositionValid(t) && this.get(t) == \" \") {\n        const t1 = add(t, d);\n        can.push(add(t1, [d[1], d[0]]));\n        can.push(add(t1, [-d[1], -d[0]]));\n      }\n    }\n    const ret: [number, number][] = [];\n    for (const c of can) {\n      if (isPositionValid(c) && this.getPlayer(c) != team) {\n        ret.push(c);\n      }\n    }\n    return ret;\n  }\n\n  // get all valid moves for an Advisor\n  getAdvisorMoves(p: [number, number]): [number, number][] {\n    const ret: [number, number][] = [];\n    const team = this.getPlayer(p);\n    for (const d of [NorthEast, NorthWest, SouthEast, SouthWest]) {\n      const t = add(p, d);\n      if (isInPalace(t, team) && this.getPlayer(t) != team) {\n        ret.push(t);\n      }\n    }\n    return ret;\n  }\n\n  // get all valid moves for a Bishop\n  getBishopMoves(p: [number, number]): [number, number][] {\n    const ret: [number, number][] = [];\n    const team = this.getPlayer(p);\n    for (const d of [NorthEast, NorthWest, SouthEast, SouthWest]) {\n      const t1 = add(p, d);\n      if ((team == \"b\" && t1[0] > 4) || (team == \"w\" && t1[0] < 5)) {\n        continue; // Bishop cannot cross the river\n      }\n      if (isPositionValid(t1) && this.get(t1) == \" \") {\n        const t2 = add(t1, d);\n        if (isPositionValid(t2) && this.getPlayer(t2) != team) {\n          ret.push(t2);\n        }\n      }\n    }\n    return ret;\n  }\n\n  // get all valid moves for a Pawn\n  getPawnMoves(p: [number, number]): [number, number][] {\n    const ret: [number, number][] = [];\n    const team = this.getPlayer(p);\n    const direct = team == \"w\" ? [North] : [South];\n    if ((team == \"w\" && p[0] <= 4) || (team == \"b\" && p[0] >= 5)) {\n      direct.push(East);\n      direct.push(West);\n    }\n    for (const d of direct) {\n      const t = add(p, d);\n      if (isPositionValid(t) && this.getPlayer(t) != team) {\n        ret.push(t);\n      }\n    }\n    return ret;\n  }\n\n  move(a: string, b: string): string {\n    const pa = strToPos(a);\n    const pb = strToPos(b);\n    const ret = this.get(pb);\n    this.set(pb, this.get(pa));\n    this.set(pa, \" \");\n    return ret;\n  }\n\n  // get moves for a piece\n  getMoves(s: string): string[] {\n    let can: [number, number][] = [];\n    const p = strToPos(s);\n    switch (this.getLabel(p)) {\n      case \"k\":\n        can = this.getKingMoves(p);\n        break;\n      case \"a\":\n        can = this.getAdvisorMoves(p);\n        break;\n      case \"b\":\n        can = this.getBishopMoves(p);\n        break;\n      case \"c\":\n        can = this.getCanonMoves(p);\n        break;\n      case \"n\":\n        can = this.getKnightMoves(p);\n        break;\n      case \"r\":\n        can = this.getRookMoves(p);\n        break;\n      case \"p\":\n        can = this.getPawnMoves(p);\n        break;\n    }\n    const ret: string[] = [];\n    for (const move of can) {\n      ret.push(posToStr(move));\n    }\n    return ret;\n  }\n\n  // provide an AdvisorMove and test if it is valid\n  isAdvisorMoveValid(a: [number, number], b: [number, number]): boolean {\n    const t = this.getPlayer(a);\n    return (\n      isInPalace(b, t) &&\n      Math.abs(a[0] - b[0]) == 1 &&\n      Math.abs(a[1] - b[1]) == 1\n    );\n  }\n\n  // check if a bishop move is valid\n  isBishopMoveValid(a: [number, number], b: [number, number]): boolean {\n    const t = this.getPlayer(a);\n    if ((t == \"b\" && b[0] > 4) || (t == \"w\" && b[0] < 5)) {\n      return false;\n    }\n    const d = abs(a, b);\n    if (d[0] != 2 || d[1] != 2) {\n      return false;\n    }\n    if (this.get([(a[0] + b[0]) / 2, (a[1] + b[1]) / 2]) != \" \") {\n      return false;\n    }\n    return true;\n  }\n\n  // check if a canon move is valid\n  isCannonMoveValid(a: [number, number], b: [number, number]): boolean {\n    const count = this.countObstacle(a, b);\n    const c = this.get(b);\n    return (count == 0 && c == \" \") || (count == 1 && c != \" \");\n  }\n\n  // check if a King move is valid\n  isKingMoveValid(a: [number, number], b: [number, number]): boolean {\n    if (this.getLabel(b) == \"k\") {\n      return this.countObstacle(a, b) == 0;\n    }\n    const t = this.getPlayer(a);\n    return isInPalace(b, t) && diff(a[0], b[0]) + diff(a[1], b[1]) == 1;\n  }\n\n  // check if a knight move is valid\n  isKnightMoveValid(a: [number, number], b: [number, number]): boolean {\n    const d = abs(a, b);\n    if (d[0] === 1 && d[1] === 2) {\n      const dy = b[1] > a[1] ? 1 : -1;\n      if (this.matrix[a[0]][dy + a[1]] != \" \") {\n        return false;\n      }\n    } else if (d[0] === 2 && d[1] === 1) {\n      const dx = b[0] > a[1] ? 1 : -1;\n      if (this.matrix[a[0] + dx][a[1]] != \" \") {\n        return false;\n      }\n    } else {\n      return false;\n    }\n    return true;\n  }\n\n  // check if a Pawn move is valid\n  isPawnMoveValid(a: [number, number], b: [number, number]): boolean {\n    const d = abs(a, b);\n    if (d[0] + d[1] != 1) {\n      return false;\n    }\n    const t = this.getPlayer(a);\n    if (t == \"w\") {\n      if ((a[0] == b[0] && a[0] > 4) || a[0] - b[0] == -1) {\n        return false;\n      }\n    } else {\n      if ((a[0] == b[0] && a[0] < 5) || a[0] - b[0] == 1) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  // check if a Rook move is valid\n  isRookMoveValid(a: [number, number], b: [number, number]): boolean {\n    return this.countObstacle(a, b) == 0;\n  }\n\n  //count how many pieces lies between two positions\n  countObstacle(a: [number, number], b: [number, number]): number {\n    const ax = a[0],\n      bx = b[0],\n      ay = a[1],\n      by = b[1];\n    let i,\n      j,\n      k,\n      n = 0;\n    if (ax === bx) {\n      i = ay < by ? ay : by;\n      j = ay > by ? ay : by;\n      for (k = i + 1; k < j; k++) {\n        if (this.matrix[ax][k] != \" \") {\n          n++;\n        }\n      }\n      return n;\n    } else if (ay === by) {\n      i = ax < bx ? ax : bx;\n      j = ax > bx ? ax : bx;\n      for (k = i + 1; k < j; k++) {\n        if (this.matrix[k][ay] != \" \") {\n          n++;\n        }\n      }\n      return n;\n    }\n    return -1;\n  }\n\n  isMoveValid(a: string, b: string): boolean {\n    const ta = strToPos(a);\n    const tb = strToPos(b);\n    if (this.getPlayer(ta) == this.getPlayer(tb)) {\n      return false;\n    }\n    const pa = this.getLabel(ta);\n    switch (pa) {\n      case \"a\":\n        return this.isAdvisorMoveValid(ta, tb);\n      case \"b\":\n        return this.isBishopMoveValid(ta, tb);\n      case \"c\":\n        return this.isCannonMoveValid(ta, tb);\n      case \"k\":\n        return this.isKingMoveValid(ta, tb);\n      case \"n\":\n        return this.isKnightMoveValid(ta, tb);\n      case \"p\":\n        return this.isPawnMoveValid(ta, tb);\n      case \"r\":\n        return this.isRookMoveValid(ta, tb);\n      default:\n        return false;\n    }\n  }\n}\n","\nimport { Options, Vue } from \"vue-class-component\";\nimport ChessGrid from \"./ChessGrid.vue\";\nimport ChessPiece from \"./ChessPiece.vue\";\nimport { Ucci } from \"./Ucci\";\n\nclass PieceInfo {\n  position = \"\";\n  piece = \"\";\n\n  constructor(position: string, piece: string) {\n    this.position = position;\n    this.piece = piece;\n  }\n}\n\nclass Move {\n  start = \"a0\";\n  end = \"a1\";\n  eaten = \" \";\n  constructor(start: string, end: string, eaten: string) {\n    this.start = start;\n    this.end = end;\n    this.eaten = eaten;\n  }\n}\n\n@Options({\n  name: \"ChessBoard\",\n  data() {\n    return {\n      matrix: [\n        [\"r\", \"n\", \"b\", \"a\", \"k\", \"a\", \"b\", \"n\", \"r\"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \"c\", \" \", \" \", \" \", \" \", \" \", \"c\", \" \"],\n        [\"p\", \" \", \"p\", \" \", \"p\", \" \", \"p\", \" \", \"p\"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\"P\", \" \", \"P\", \" \", \"P\", \" \", \"P\", \" \", \"P\"],\n        [\" \", \"C\", \" \", \" \", \" \", \" \", \" \", \"C\", \" \"],\n        [\" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \", \" \"],\n        [\"R\", \"N\", \"B\", \"A\", \"K\", \"A\", \"B\", \"N\", \"R\"],\n      ],\n      history: [],\n      player: \"w\",\n      chosen: undefined,\n      possible: [],\n    };\n  },\n  components: {\n    ChessGrid,\n    ChessPiece,\n  },\n  computed: {\n    movable() {\n      let ret = [];\n      let ucci = new Ucci(this.matrix);\n      for (const p of ucci.getTeam(this.player)) {\n        if (p == this.chosen) {\n          continue;\n        }\n        ret.push(new PieceInfo(p, ucci.getByStr(p)));\n      }\n      return ret;\n    },\n    unmovable() {\n      let ret = [];\n      let ucci = new Ucci(this.matrix);\n      const play = this.player == \"w\" ? \"b\" : \"w\";\n      for (const p of ucci.getTeam(play)) {\n        if (this.possible.indexOf(p) >= 0) {\n          continue;\n        }\n        ret.push(new PieceInfo(p, ucci.getByStr(p)));\n      }\n      return ret;\n    },\n    moves() {\n      let ret = [];\n      const ucci = new Ucci(this.matrix);\n      for (const p of this.possible) {\n        ret.push(new PieceInfo(p, ucci.getByStr(p)));\n      }\n      if (this.chosen) {\n        ret.push(new PieceInfo(this.chosen, ucci.getByStr(this.chosen)));\n      }\n      return ret;\n    },\n  },\n  methods: {\n    onSelectPiece(piece: string) {\n      this.chosen = piece;\n      const ucci = new Ucci(this.matrix);\n      this.possible = ucci.getMoves(piece);\n    },\n    onMovePiece(piece: string) {\n      if (\n        this.chosen != piece &&\n        piece != undefined &&\n        this.chosen != undefined\n      ) {\n        const ucci = new Ucci(this.matrix);\n        this.history.push(\n          new Move(this.chosen, piece, ucci.move(this.chosen, piece))\n        );\n        this.player = this.player == \"w\" ? \"b\" : \"w\";\n      }\n      this.chosen = undefined;\n      this.possible = [];\n    },\n  },\n})\nexport default class ChessBoard extends Vue {}\n","import { render } from \"./ChessBoard.vue?vue&type=template&id=0ac4f90c\"\nimport script from \"./ChessBoard.vue?vue&type=script&lang=ts\"\nexport * from \"./ChessBoard.vue?vue&type=script&lang=ts\"\n\nimport \"./ChessBoard.vue?vue&type=style&index=0&id=0ac4f90c&lang=css\"\nscript.render = render\n\nexport default script","\nimport { Options, Vue } from \"vue-class-component\";\nimport ChessBoard from \"./components/ChessBoard.vue\";\n\n@Options({\n  name: \"App\",\n  components: {\n    ChessBoard,\n  },\n})\nexport default class App extends Vue {}\n","import { render } from \"./App.vue?vue&type=template&id=1116e598\"\nimport script from \"./App.vue?vue&type=script&lang=ts\"\nexport * from \"./App.vue?vue&type=script&lang=ts\"\n\nimport \"./App.vue?vue&type=style&index=0&id=1116e598&lang=css\"\nscript.render = render\n\nexport default script","import { createStore } from \"vuex\";\n\nexport default createStore({\n  state: {},\n  mutations: {},\n  actions: {},\n  modules: {},\n});\n","import { createApp } from \"vue\";\nimport App from \"./App.vue\";\nimport store from \"./store\";\n\ncreateApp(App).use(store).mount(\"#app\");\n"],"sourceRoot":""}